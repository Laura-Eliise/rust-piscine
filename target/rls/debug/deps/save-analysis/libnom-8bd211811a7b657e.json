{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4","program":"/home/laura-eliise/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","nom","/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"stream\"","-C","metadata=8bd211811a7b657e","-C","extra-filename=-8bd211811a7b657e","--out-dir","/home/laura-eliise/Desktop/01/piscine-rust/target/rls/debug/deps","-L","dependency=/home/laura-eliise/Desktop/01/piscine-rust/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/laura-eliise/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/laura-eliise/Desktop/01/piscine-rust/target/rls/debug/deps/libnom-8bd211811a7b657e.rmeta"},"prelude":{"crate_id":{"name":"nom","disambiguator":[361394557975655870,0]},"crate_root":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src","external_crates":[{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14788966508543342302,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2825088610194081445,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9481142260376939403,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16420834686343379425,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11097033969885139948,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6800150773471260640,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9424233180753397496,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4493421558680613340,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[10587786945246582611,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6037489587312533517,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[12999623613951624675,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[15285592788019233460,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[7690318462147983057,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16937637772373355212,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[8216859446519220865,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[6387052066414425180,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[879344915155370202,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[12947071141408240460,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12545025351940724261,0]}}],"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":0,"byte_end":3658,"line_start":1,"line_end":151,"column_start":1,"column_end":9}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":2928,"byte_end":2929,"line_start":112,"line_end":112,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"AsBytes, InputLength, ErrorKind","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":2955,"byte_end":2956,"line_start":113,"line_end":113,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"Needed, Err, IResult","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":2980,"byte_end":2981,"line_start":114,"line_end":114,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":3006,"byte_end":3007,"line_start":115,"line_end":115,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":3030,"byte_end":3031,"line_start":116,"line_end":116,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":3053,"byte_end":3054,"line_start":117,"line_end":117,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":3076,"byte_end":3077,"line_start":119,"line_end":119,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":3104,"byte_end":3105,"line_start":120,"line_end":120,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":3240,"byte_end":3241,"line_start":127,"line_end":127,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":3293,"byte_end":3294,"line_start":130,"line_end":130,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":0,"byte_end":3658,"line_start":1,"line_end":151,"column_start":1,"column_end":9},"name":"","qualname":"::","value":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":144},{"krate":0,"index":232},{"krate":0,"index":285},{"krate":0,"index":289},{"krate":0,"index":317},{"krate":0,"index":322},{"krate":0,"index":431},{"krate":0,"index":452},{"krate":0,"index":635}],"decl_id":null,"docs":" nom, eating data byte by byte","sig":null,"attributes":[{"value":"/ nom, eating data byte by byte","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":0,"byte_end":33,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":34,"byte_end":37,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ nom is a parser combinator library with a focus on safe parsing,","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":38,"byte_end":106,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/ streaming patterns, and as much as possible zero copy.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":107,"byte_end":165,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":166,"byte_end":169,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The code is available on [Github](https://github.com/Geal/nom)","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":170,"byte_end":236,"line_start":6,"line_end":6,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":237,"byte_end":240,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":241,"byte_end":254,"line_start":8,"line_end":8,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":255,"byte_end":258,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":259,"byte_end":266,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/ #[macro_use]","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":267,"byte_end":283,"line_start":11,"line_end":11,"column_start":1,"column_end":17}},{"value":"/ extern crate nom;","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":284,"byte_end":305,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":306,"byte_end":309,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ use nom::{IResult,digit};","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":310,"byte_end":339,"line_start":14,"line_end":14,"column_start":1,"column_end":30}},{"value":"/ use nom::IResult::*;","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":340,"byte_end":364,"line_start":15,"line_end":15,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":365,"byte_end":368,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ // Parser definition","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":369,"byte_end":393,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":394,"byte_end":397,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ use std::str;","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":398,"byte_end":415,"line_start":19,"line_end":19,"column_start":1,"column_end":18}},{"value":"/ use std::str::FromStr;","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":416,"byte_end":442,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":443,"byte_end":446,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ named!(parens<i64>, delimited!(","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":447,"byte_end":482,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/     char!('('),","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":483,"byte_end":502,"line_start":23,"line_end":23,"column_start":1,"column_end":20}},{"value":"/     expr,","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":503,"byte_end":516,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/     char!(')')","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":517,"byte_end":535,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/   )","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":536,"byte_end":543,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ );","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":544,"byte_end":550,"line_start":27,"line_end":27,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":551,"byte_end":554,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ named!(i64_digit<i64>,","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":555,"byte_end":581,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/   map_res!(","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":582,"byte_end":597,"line_start":30,"line_end":30,"column_start":1,"column_end":16}},{"value":"/     map_res!(","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":598,"byte_end":615,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/       digit,","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":616,"byte_end":632,"line_start":32,"line_end":32,"column_start":1,"column_end":17}},{"value":"/       str::from_utf8","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":633,"byte_end":657,"line_start":33,"line_end":33,"column_start":1,"column_end":25}},{"value":"/     ),","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":658,"byte_end":668,"line_start":34,"line_end":34,"column_start":1,"column_end":11}},{"value":"/     FromStr::from_str","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":669,"byte_end":694,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/   )","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":695,"byte_end":702,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ );","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":703,"byte_end":709,"line_start":37,"line_end":37,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":710,"byte_end":713,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // We transform an integer string into a i64","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":714,"byte_end":762,"line_start":39,"line_end":39,"column_start":1,"column_end":49}},{"value":"/ // we look for a digit suite, and try to convert it.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":763,"byte_end":819,"line_start":40,"line_end":40,"column_start":1,"column_end":57}},{"value":"/ // if either str::from_utf8 or FromStr::from_str fail,","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":820,"byte_end":878,"line_start":41,"line_end":41,"column_start":1,"column_end":59}},{"value":"/ // the parser will fail","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":879,"byte_end":906,"line_start":42,"line_end":42,"column_start":1,"column_end":28}},{"value":"/ named!(factor<i64>,","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":907,"byte_end":930,"line_start":43,"line_end":43,"column_start":1,"column_end":24}},{"value":"/   alt!(","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":931,"byte_end":942,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/     i64_digit","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":943,"byte_end":960,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/   | parens","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":961,"byte_end":975,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/   )","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":976,"byte_end":983,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ );","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":984,"byte_end":990,"line_start":48,"line_end":48,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":991,"byte_end":994,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // we define acc as mutable to update its value whenever a new term is found","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":995,"byte_end":1075,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/ named!(term <i64>,","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":1076,"byte_end":1098,"line_start":51,"line_end":51,"column_start":1,"column_end":23}},{"value":"/   chain!(","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":1099,"byte_end":1112,"line_start":52,"line_end":52,"column_start":1,"column_end":14}},{"value":"/     mut acc: factor  ~","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":1113,"byte_end":1139,"line_start":53,"line_end":53,"column_start":1,"column_end":27}},{"value":"/              many0!(","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":1140,"byte_end":1164,"line_start":54,"line_end":54,"column_start":1,"column_end":25}},{"value":"/                alt!(","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":1165,"byte_end":1189,"line_start":55,"line_end":55,"column_start":1,"column_end":25}},{"value":"/                  tap!(mul: preceded!(tag!(\"*\"), factor) => acc = acc * mul) |","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":1190,"byte_end":1271,"line_start":56,"line_end":56,"column_start":1,"column_end":82}},{"value":"/                  tap!(div: preceded!(tag!(\"/\"), factor) => acc = acc / div)","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":1272,"byte_end":1351,"line_start":57,"line_end":57,"column_start":1,"column_end":80}},{"value":"/                )","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":1352,"byte_end":1372,"line_start":58,"line_end":58,"column_start":1,"column_end":21}},{"value":"/              ),","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":1373,"byte_end":1392,"line_start":59,"line_end":59,"column_start":1,"column_end":20}},{"value":"/     || { return acc }","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":1393,"byte_end":1418,"line_start":60,"line_end":60,"column_start":1,"column_end":26}},{"value":"/   )","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":1419,"byte_end":1426,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/ );","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":1427,"byte_end":1433,"line_start":62,"line_end":62,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":1434,"byte_end":1437,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ named!(expr <i64>,","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":1438,"byte_end":1460,"line_start":64,"line_end":64,"column_start":1,"column_end":23}},{"value":"/   chain!(","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":1461,"byte_end":1474,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/     mut acc: term  ~","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":1475,"byte_end":1499,"line_start":66,"line_end":66,"column_start":1,"column_end":25}},{"value":"/              many0!(","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":1500,"byte_end":1524,"line_start":67,"line_end":67,"column_start":1,"column_end":25}},{"value":"/                alt!(","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":1525,"byte_end":1549,"line_start":68,"line_end":68,"column_start":1,"column_end":25}},{"value":"/                  tap!(add: preceded!(tag!(\"+\"), term) => acc = acc + add) |","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":1550,"byte_end":1629,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/                  tap!(sub: preceded!(tag!(\"-\"), term) => acc = acc - sub)","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":1630,"byte_end":1707,"line_start":70,"line_end":70,"column_start":1,"column_end":78}},{"value":"/                )","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":1708,"byte_end":1728,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"/              ),","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":1729,"byte_end":1748,"line_start":72,"line_end":72,"column_start":1,"column_end":20}},{"value":"/     || { return acc }","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":1749,"byte_end":1774,"line_start":73,"line_end":73,"column_start":1,"column_end":26}},{"value":"/   )","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":1775,"byte_end":1782,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ );","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":1783,"byte_end":1789,"line_start":75,"line_end":75,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":1790,"byte_end":1793,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":1794,"byte_end":1809,"line_start":77,"line_end":77,"column_start":1,"column_end":16}},{"value":"/   assert_eq!(expr(b\"1+2\"),         IResult::Done(&b\"\"[..], 3));","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":1810,"byte_end":1877,"line_start":78,"line_end":78,"column_start":1,"column_end":68}},{"value":"/   assert_eq!(expr(b\"12+6-4+3\"),    IResult::Done(&b\"\"[..], 17));","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":1878,"byte_end":1946,"line_start":79,"line_end":79,"column_start":1,"column_end":69}},{"value":"/   assert_eq!(expr(b\"1+2*3+4\"),     IResult::Done(&b\"\"[..], 11));","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":1947,"byte_end":2015,"line_start":80,"line_end":80,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":2016,"byte_end":2019,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/   assert_eq!(expr(b\"(2)\"),         IResult::Done(&b\"\"[..], 2));","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":2020,"byte_end":2087,"line_start":82,"line_end":82,"column_start":1,"column_end":68}},{"value":"/   assert_eq!(expr(b\"2*(3+4)\"),     IResult::Done(&b\"\"[..], 14));","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":2088,"byte_end":2156,"line_start":83,"line_end":83,"column_start":1,"column_end":69}},{"value":"/   assert_eq!(expr(b\"2*2/(5-1)+3\"), IResult::Done(&b\"\"[..], 4));","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":2157,"byte_end":2224,"line_start":84,"line_end":84,"column_start":1,"column_end":68}},{"value":"/ }","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":2225,"byte_end":2230,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/lib.rs","byte_start":2231,"byte_end":2238,"line_start":86,"line_end":86,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":30},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":3979,"byte_end":3989,"line_start":13,"line_end":13,"column_start":11,"column_end":21},"name":"HexDisplay","qualname":"::util::HexDisplay","value":"HexDisplay","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33}],"decl_id":null,"docs":" useful functions to calculate the offset between slices and show a hexdump of a slice\n","sig":null,"attributes":[{"value":"/ useful functions to calculate the offset between slices and show a hexdump of a slice","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":3849,"byte_end":3938,"line_start":11,"line_end":11,"column_start":1,"column_end":90}},{"value":"cfg(not(feature = \"core\"))","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":3939,"byte_end":3968,"line_start":12,"line_end":12,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":4076,"byte_end":4082,"line_start":15,"line_end":15,"column_start":6,"column_end":12},"name":"offset","qualname":"::util::HexDisplay::offset","value":"pub fn offset(&Self, &[u8]) -> usize","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" offset between the first byte of self and the first byte of the argument\n","sig":null,"attributes":[{"value":"/ offset between the first byte of self and the first byte of the argument","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":3994,"byte_end":4070,"line_start":14,"line_end":14,"column_start":3,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":4240,"byte_end":4246,"line_start":19,"line_end":19,"column_start":6,"column_end":12},"name":"to_hex","qualname":"::util::HexDisplay::to_hex","value":"pub fn to_hex(&Self, usize) -> String","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a hex dump, returning the owned\n string.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a hex dump, returning the owned","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":4153,"byte_end":4220,"line_start":17,"line_end":17,"column_start":3,"column_end":70}},{"value":"/ string.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":4223,"byte_end":4234,"line_start":18,"line_end":18,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":4402,"byte_end":4413,"line_start":23,"line_end":23,"column_start":6,"column_end":17},"name":"to_hex_from","qualname":"::util::HexDisplay::to_hex_from","value":"pub fn to_hex_from(&Self, usize, usize) -> String","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a hex dump beginning at `from` address, returning the owned\n string.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a hex dump beginning at `from` address, returning the owned","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":4287,"byte_end":4382,"line_start":21,"line_end":21,"column_start":3,"column_end":98}},{"value":"/ string.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":4385,"byte_end":4396,"line_start":22,"line_end":22,"column_start":3,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":34},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":4477,"byte_end":4488,"line_start":26,"line_end":26,"column_start":11,"column_end":22},"name":"InputLength","qualname":"::util::InputLength","value":"InputLength","parent":null,"children":[{"krate":0,"index":35}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":4508,"byte_end":4517,"line_start":28,"line_end":28,"column_start":6,"column_end":15},"name":"input_len","qualname":"::util::InputLength::input_len","value":"pub fn input_len(&Self) -> usize","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":4493,"byte_end":4502,"line_start":27,"line_end":27,"column_start":3,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":52},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":5082,"byte_end":5088,"line_start":59,"line_end":59,"column_start":11,"column_end":17},"name":"AsChar","qualname":"::util::AsChar","value":"AsChar","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":5112,"byte_end":5119,"line_start":61,"line_end":61,"column_start":8,"column_end":15},"name":"as_char","qualname":"::util::AsChar::as_char","value":"pub fn as_char(Self) -> char","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":5095,"byte_end":5104,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":5160,"byte_end":5168,"line_start":63,"line_end":63,"column_start":8,"column_end":16},"name":"is_alpha","qualname":"::util::AsChar::is_alpha","value":"pub fn is_alpha(Self) -> bool","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":5143,"byte_end":5152,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":5208,"byte_end":5219,"line_start":65,"line_end":65,"column_start":8,"column_end":19},"name":"is_alphanum","qualname":"::util::AsChar::is_alphanum","value":"pub fn is_alphanum(Self) -> bool","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":5191,"byte_end":5200,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":5256,"byte_end":5265,"line_start":67,"line_end":67,"column_start":8,"column_end":17},"name":"is_0_to_9","qualname":"::util::AsChar::is_0_to_9","value":"pub fn is_0_to_9(Self) -> bool","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":5239,"byte_end":5248,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":5304,"byte_end":5316,"line_start":69,"line_end":69,"column_start":8,"column_end":20},"name":"is_hex_digit","qualname":"::util::AsChar::is_hex_digit","value":"pub fn is_hex_digit(Self) -> bool","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":5287,"byte_end":5296,"line_start":68,"line_end":68,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":5353,"byte_end":5365,"line_start":71,"line_end":71,"column_start":8,"column_end":20},"name":"is_oct_digit","qualname":"::util::AsChar::is_oct_digit","value":"pub fn is_oct_digit(Self) -> bool","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":5336,"byte_end":5345,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":74},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":6523,"byte_end":6534,"line_start":114,"line_end":114,"column_start":11,"column_end":22},"name":"IterIndices","qualname":"::util::IterIndices","value":"IterIndices","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":75},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":6546,"byte_end":6550,"line_start":115,"line_end":115,"column_start":10,"column_end":14},"name":"Item","qualname":"::util::IterIndices::Item","value":"type Item: AsChar;","parent":{"krate":0,"index":74},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":76},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":6569,"byte_end":6573,"line_start":116,"line_end":116,"column_start":10,"column_end":14},"name":"Iter","qualname":"::util::IterIndices::Iter","value":"type Iter : Iterator<Item=(usize, Self::Item)>;","parent":{"krate":0,"index":74},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":6619,"byte_end":6631,"line_start":117,"line_end":117,"column_start":8,"column_end":20},"name":"iter_indices","qualname":"::util::IterIndices::iter_indices","value":"pub fn iter_indices(Self) -> Self::Iter","parent":{"krate":0,"index":74},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":95},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":10821,"byte_end":10834,"line_start":281,"line_end":281,"column_start":8,"column_end":21},"name":"error_to_list","qualname":"::util::error_to_list","value":"pub fn error_to_list<P, E: Clone>(&Err<P, E>) -> Vec<ErrorKind<E>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":98},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":11250,"byte_end":11269,"line_start":298,"line_end":298,"column_start":8,"column_end":27},"name":"compare_error_paths","qualname":"::util::compare_error_paths","value":"pub fn compare_error_paths<P, E: Clone + PartialEq>(&Err<P, E>, &Err<P, E>)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":104},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":11463,"byte_end":11480,"line_start":307,"line_end":307,"column_start":8,"column_end":25},"name":"add_error_pattern","qualname":"::util::add_error_pattern","value":"pub fn add_error_pattern<'a, I, O, E: Clone + Hash +\nEq>(&mut HashMap<Vec<ErrorKind<E>>, &'a str>, IResult<I, O, E>, &'a str)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"core\"))","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":11426,"byte_end":11455,"line_start":306,"line_end":306,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":109},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":11721,"byte_end":11737,"line_start":316,"line_end":316,"column_start":8,"column_end":24},"name":"slice_to_offsets","qualname":"::util::slice_to_offsets","value":"pub fn slice_to_offsets(&[u8], &[u8]) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":110},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":11949,"byte_end":11963,"line_start":324,"line_end":324,"column_start":8,"column_end":22},"name":"prepare_errors","qualname":"::util::prepare_errors","value":"pub fn prepare_errors<O, E: Clone>(&[u8], IResult<&[u8], O, E>)\n-> Option<Vec<(ErrorKind<E>, usize, usize)>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"core\"))","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":11912,"byte_end":11941,"line_start":323,"line_end":323,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":114},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":12847,"byte_end":12858,"line_start":357,"line_end":357,"column_start":8,"column_end":19},"name":"print_error","qualname":"::util::print_error","value":"pub fn print_error<O, E: Clone>(&[u8], IResult<&[u8], O, E>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"core\"))","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":12810,"byte_end":12839,"line_start":356,"line_end":356,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":117},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":13207,"byte_end":13222,"line_start":369,"line_end":369,"column_start":8,"column_end":23},"name":"generate_colors","qualname":"::util::generate_colors","value":"pub fn generate_colors<E>(&[(ErrorKind<E>, usize, usize)]) -> HashMap<u32, u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"core\"))","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":13170,"byte_end":13199,"line_start":368,"line_end":368,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":119},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":13476,"byte_end":13492,"line_start":381,"line_end":381,"column_start":8,"column_end":24},"name":"code_from_offset","qualname":"::util::code_from_offset","value":"pub fn code_from_offset<E>(&[(ErrorKind<E>, usize, usize)], usize)\n-> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":121},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":14003,"byte_end":14014,"line_start":402,"line_end":402,"column_start":8,"column_end":19},"name":"reset_color","qualname":"::util::reset_color","value":"pub fn reset_color(&mut Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":122},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":14115,"byte_end":14126,"line_start":409,"line_end":409,"column_start":8,"column_end":19},"name":"write_color","qualname":"::util::write_color","value":"pub fn write_color(&mut Vec<u8>, u8)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":123},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":14381,"byte_end":14392,"line_start":421,"line_end":421,"column_start":8,"column_end":19},"name":"print_codes","qualname":"::util::print_codes","value":"pub fn print_codes(HashMap<u32, u8>, HashMap<u32, &str>) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"core\"))","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":14344,"byte_end":14373,"line_start":420,"line_end":420,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":124},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":14983,"byte_end":14996,"line_start":443,"line_end":443,"column_start":8,"column_end":21},"name":"print_offsets","qualname":"::util::print_offsets","value":"pub fn print_offsets<E>(&[u8], usize, &[(ErrorKind<E>, usize, usize)])\n-> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"core\"))","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":14946,"byte_end":14975,"line_start":442,"line_end":442,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":126},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":17221,"byte_end":17228,"line_start":528,"line_end":528,"column_start":11,"column_end":18},"name":"AsBytes","qualname":"::util::AsBytes","value":"AsBytes","parent":null,"children":[{"krate":0,"index":127}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":17236,"byte_end":17244,"line_start":529,"line_end":529,"column_start":6,"column_end":14},"name":"as_bytes","qualname":"::util::AsBytes::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":878},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18270,"byte_end":18276,"line_start":591,"line_end":591,"column_start":3,"column_end":9},"name":"Custom","qualname":"::util::ErrorKind::Custom","value":"ErrorKind::Custom(E)","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":881},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18283,"byte_end":18286,"line_start":592,"line_end":592,"column_start":3,"column_end":6},"name":"Tag","qualname":"::util::ErrorKind::Tag","value":"ErrorKind::Tag","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":883},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18290,"byte_end":18296,"line_start":593,"line_end":593,"column_start":3,"column_end":9},"name":"MapRes","qualname":"::util::ErrorKind::MapRes","value":"ErrorKind::MapRes","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":885},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18300,"byte_end":18306,"line_start":594,"line_end":594,"column_start":3,"column_end":9},"name":"MapOpt","qualname":"::util::ErrorKind::MapOpt","value":"ErrorKind::MapOpt","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":887},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18310,"byte_end":18313,"line_start":595,"line_end":595,"column_start":3,"column_end":6},"name":"Alt","qualname":"::util::ErrorKind::Alt","value":"ErrorKind::Alt","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":889},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18317,"byte_end":18322,"line_start":596,"line_end":596,"column_start":3,"column_end":8},"name":"IsNot","qualname":"::util::ErrorKind::IsNot","value":"ErrorKind::IsNot","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":891},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18326,"byte_end":18329,"line_start":597,"line_end":597,"column_start":3,"column_end":6},"name":"IsA","qualname":"::util::ErrorKind::IsA","value":"ErrorKind::IsA","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":893},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18333,"byte_end":18346,"line_start":598,"line_end":598,"column_start":3,"column_end":16},"name":"SeparatedList","qualname":"::util::ErrorKind::SeparatedList","value":"ErrorKind::SeparatedList","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":895},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18350,"byte_end":18371,"line_start":599,"line_end":599,"column_start":3,"column_end":24},"name":"SeparatedNonEmptyList","qualname":"::util::ErrorKind::SeparatedNonEmptyList","value":"ErrorKind::SeparatedNonEmptyList","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":897},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18375,"byte_end":18380,"line_start":600,"line_end":600,"column_start":3,"column_end":8},"name":"Many0","qualname":"::util::ErrorKind::Many0","value":"ErrorKind::Many0","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":899},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18384,"byte_end":18389,"line_start":601,"line_end":601,"column_start":3,"column_end":8},"name":"Many1","qualname":"::util::ErrorKind::Many1","value":"ErrorKind::Many1","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":901},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18393,"byte_end":18398,"line_start":602,"line_end":602,"column_start":3,"column_end":8},"name":"Count","qualname":"::util::ErrorKind::Count","value":"ErrorKind::Count","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":903},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18402,"byte_end":18421,"line_start":603,"line_end":603,"column_start":3,"column_end":22},"name":"TakeUntilAndConsume","qualname":"::util::ErrorKind::TakeUntilAndConsume","value":"ErrorKind::TakeUntilAndConsume","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":905},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18425,"byte_end":18434,"line_start":604,"line_end":604,"column_start":3,"column_end":12},"name":"TakeUntil","qualname":"::util::ErrorKind::TakeUntil","value":"ErrorKind::TakeUntil","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":907},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18438,"byte_end":18463,"line_start":605,"line_end":605,"column_start":3,"column_end":28},"name":"TakeUntilEitherAndConsume","qualname":"::util::ErrorKind::TakeUntilEitherAndConsume","value":"ErrorKind::TakeUntilEitherAndConsume","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":909},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18467,"byte_end":18482,"line_start":606,"line_end":606,"column_start":3,"column_end":18},"name":"TakeUntilEither","qualname":"::util::ErrorKind::TakeUntilEither","value":"ErrorKind::TakeUntilEither","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":911},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18486,"byte_end":18497,"line_start":607,"line_end":607,"column_start":3,"column_end":14},"name":"LengthValue","qualname":"::util::ErrorKind::LengthValue","value":"ErrorKind::LengthValue","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":913},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18501,"byte_end":18511,"line_start":608,"line_end":608,"column_start":3,"column_end":13},"name":"TagClosure","qualname":"::util::ErrorKind::TagClosure","value":"ErrorKind::TagClosure","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":915},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18515,"byte_end":18520,"line_start":609,"line_end":609,"column_start":3,"column_end":8},"name":"Alpha","qualname":"::util::ErrorKind::Alpha","value":"ErrorKind::Alpha","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":917},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18524,"byte_end":18529,"line_start":610,"line_end":610,"column_start":3,"column_end":8},"name":"Digit","qualname":"::util::ErrorKind::Digit","value":"ErrorKind::Digit","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":919},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18533,"byte_end":18541,"line_start":611,"line_end":611,"column_start":3,"column_end":11},"name":"HexDigit","qualname":"::util::ErrorKind::HexDigit","value":"ErrorKind::HexDigit","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":921},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18545,"byte_end":18553,"line_start":612,"line_end":612,"column_start":3,"column_end":11},"name":"OctDigit","qualname":"::util::ErrorKind::OctDigit","value":"ErrorKind::OctDigit","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":923},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18557,"byte_end":18569,"line_start":613,"line_end":613,"column_start":3,"column_end":15},"name":"AlphaNumeric","qualname":"::util::ErrorKind::AlphaNumeric","value":"ErrorKind::AlphaNumeric","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":925},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18573,"byte_end":18578,"line_start":614,"line_end":614,"column_start":3,"column_end":8},"name":"Space","qualname":"::util::ErrorKind::Space","value":"ErrorKind::Space","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":927},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18582,"byte_end":18592,"line_start":615,"line_end":615,"column_start":3,"column_end":13},"name":"MultiSpace","qualname":"::util::ErrorKind::MultiSpace","value":"ErrorKind::MultiSpace","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":929},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18596,"byte_end":18609,"line_start":616,"line_end":616,"column_start":3,"column_end":16},"name":"LengthValueFn","qualname":"::util::ErrorKind::LengthValueFn","value":"ErrorKind::LengthValueFn","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":931},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18613,"byte_end":18616,"line_start":617,"line_end":617,"column_start":3,"column_end":6},"name":"Eof","qualname":"::util::ErrorKind::Eof","value":"ErrorKind::Eof","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":933},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18620,"byte_end":18627,"line_start":618,"line_end":618,"column_start":3,"column_end":10},"name":"ExprOpt","qualname":"::util::ErrorKind::ExprOpt","value":"ErrorKind::ExprOpt","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":935},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18631,"byte_end":18638,"line_start":619,"line_end":619,"column_start":3,"column_end":10},"name":"ExprRes","qualname":"::util::ErrorKind::ExprRes","value":"ErrorKind::ExprRes","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":937},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18642,"byte_end":18652,"line_start":620,"line_end":620,"column_start":3,"column_end":13},"name":"CondReduce","qualname":"::util::ErrorKind::CondReduce","value":"ErrorKind::CondReduce","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":939},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18656,"byte_end":18662,"line_start":621,"line_end":621,"column_start":3,"column_end":9},"name":"Switch","qualname":"::util::ErrorKind::Switch","value":"ErrorKind::Switch","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":941},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18666,"byte_end":18673,"line_start":622,"line_end":622,"column_start":3,"column_end":10},"name":"TagBits","qualname":"::util::ErrorKind::TagBits","value":"ErrorKind::TagBits","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":943},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18677,"byte_end":18682,"line_start":623,"line_end":623,"column_start":3,"column_end":8},"name":"OneOf","qualname":"::util::ErrorKind::OneOf","value":"ErrorKind::OneOf","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":945},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18686,"byte_end":18692,"line_start":624,"line_end":624,"column_start":3,"column_end":9},"name":"NoneOf","qualname":"::util::ErrorKind::NoneOf","value":"ErrorKind::NoneOf","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":947},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18696,"byte_end":18700,"line_start":625,"line_end":625,"column_start":3,"column_end":7},"name":"Char","qualname":"::util::ErrorKind::Char","value":"ErrorKind::Char","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":949},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18704,"byte_end":18708,"line_start":626,"line_end":626,"column_start":3,"column_end":7},"name":"CrLf","qualname":"::util::ErrorKind::CrLf","value":"ErrorKind::CrLf","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":951},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18712,"byte_end":18723,"line_start":627,"line_end":627,"column_start":3,"column_end":14},"name":"RegexpMatch","qualname":"::util::ErrorKind::RegexpMatch","value":"ErrorKind::RegexpMatch","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":953},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18727,"byte_end":18740,"line_start":628,"line_end":628,"column_start":3,"column_end":16},"name":"RegexpMatches","qualname":"::util::ErrorKind::RegexpMatches","value":"ErrorKind::RegexpMatches","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":955},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18744,"byte_end":18754,"line_start":629,"line_end":629,"column_start":3,"column_end":13},"name":"RegexpFind","qualname":"::util::ErrorKind::RegexpFind","value":"ErrorKind::RegexpFind","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":957},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18758,"byte_end":18771,"line_start":630,"line_end":630,"column_start":3,"column_end":16},"name":"RegexpCapture","qualname":"::util::ErrorKind::RegexpCapture","value":"ErrorKind::RegexpCapture","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":959},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18775,"byte_end":18789,"line_start":631,"line_end":631,"column_start":3,"column_end":17},"name":"RegexpCaptures","qualname":"::util::ErrorKind::RegexpCaptures","value":"ErrorKind::RegexpCaptures","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":961},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18793,"byte_end":18803,"line_start":632,"line_end":632,"column_start":3,"column_end":13},"name":"TakeWhile1","qualname":"::util::ErrorKind::TakeWhile1","value":"ErrorKind::TakeWhile1","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":963},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18807,"byte_end":18815,"line_start":633,"line_end":633,"column_start":3,"column_end":11},"name":"Complete","qualname":"::util::ErrorKind::Complete","value":"ErrorKind::Complete","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":965},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18819,"byte_end":18822,"line_start":634,"line_end":634,"column_start":3,"column_end":6},"name":"Fix","qualname":"::util::ErrorKind::Fix","value":"ErrorKind::Fix","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":967},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18826,"byte_end":18833,"line_start":635,"line_end":635,"column_start":3,"column_end":10},"name":"Escaped","qualname":"::util::ErrorKind::Escaped","value":"ErrorKind::Escaped","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":969},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18837,"byte_end":18853,"line_start":636,"line_end":636,"column_start":3,"column_end":19},"name":"EscapedTransform","qualname":"::util::ErrorKind::EscapedTransform","value":"ErrorKind::EscapedTransform","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":971},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18857,"byte_end":18863,"line_start":637,"line_end":637,"column_start":3,"column_end":9},"name":"TagStr","qualname":"::util::ErrorKind::TagStr","value":"ErrorKind::TagStr","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":973},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18867,"byte_end":18875,"line_start":638,"line_end":638,"column_start":3,"column_end":11},"name":"IsNotStr","qualname":"::util::ErrorKind::IsNotStr","value":"ErrorKind::IsNotStr","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":975},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18879,"byte_end":18885,"line_start":639,"line_end":639,"column_start":3,"column_end":9},"name":"IsAStr","qualname":"::util::ErrorKind::IsAStr","value":"ErrorKind::IsAStr","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":977},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18889,"byte_end":18902,"line_start":640,"line_end":640,"column_start":3,"column_end":16},"name":"TakeWhile1Str","qualname":"::util::ErrorKind::TakeWhile1Str","value":"ErrorKind::TakeWhile1Str","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":979},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18906,"byte_end":18914,"line_start":641,"line_end":641,"column_start":3,"column_end":11},"name":"NonEmpty","qualname":"::util::ErrorKind::NonEmpty","value":"ErrorKind::NonEmpty","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":981},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18918,"byte_end":18924,"line_start":642,"line_end":642,"column_start":3,"column_end":9},"name":"ManyMN","qualname":"::util::ErrorKind::ManyMN","value":"ErrorKind::ManyMN","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":983},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18928,"byte_end":18950,"line_start":643,"line_end":643,"column_start":3,"column_end":25},"name":"TakeUntilAndConsumeStr","qualname":"::util::ErrorKind::TakeUntilAndConsumeStr","value":"ErrorKind::TakeUntilAndConsumeStr","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":985},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18954,"byte_end":18966,"line_start":644,"line_end":644,"column_start":3,"column_end":15},"name":"TakeUntilStr","qualname":"::util::ErrorKind::TakeUntilStr","value":"ErrorKind::TakeUntilStr","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":987},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18970,"byte_end":18973,"line_start":645,"line_end":645,"column_start":3,"column_end":6},"name":"Not","qualname":"::util::ErrorKind::Not","value":"ErrorKind::Not","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":876},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18249,"byte_end":18258,"line_start":590,"line_end":590,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::util::ErrorKind","value":"pub enum ErrorKind<E = u32> {\n    Custom(E),\n    Tag,\n    MapRes,\n    MapOpt,\n    Alt,\n    IsNot,\n    IsA,\n    SeparatedList,\n    SeparatedNonEmptyList,\n    Many0,\n    Many1,\n    Count,\n    TakeUntilAndConsume,\n    TakeUntil,\n    TakeUntilEitherAndConsume,\n    TakeUntilEither,\n    LengthValue,\n    TagClosure,\n    Alpha,\n    Digit,\n    HexDigit,\n    OctDigit,\n    AlphaNumeric,\n    Space,\n    MultiSpace,\n    LengthValueFn,\n    Eof,\n    ExprOpt,\n    ExprRes,\n    CondReduce,\n    Switch,\n    TagBits,\n    OneOf,\n    NoneOf,\n    Char,\n    CrLf,\n    RegexpMatch,\n    RegexpMatches,\n    RegexpFind,\n    RegexpCapture,\n    RegexpCaptures,\n    TakeWhile1,\n    Complete,\n    Fix,\n    Escaped,\n    EscapedTransform,\n    TagStr,\n    IsNotStr,\n    IsAStr,\n    TakeWhile1Str,\n    NonEmpty,\n    ManyMN,\n    TakeUntilAndConsumeStr,\n    TakeUntilStr,\n    Not,\n}","parent":null,"children":[{"krate":0,"index":878},{"krate":0,"index":881},{"krate":0,"index":883},{"krate":0,"index":885},{"krate":0,"index":887},{"krate":0,"index":889},{"krate":0,"index":891},{"krate":0,"index":893},{"krate":0,"index":895},{"krate":0,"index":897},{"krate":0,"index":899},{"krate":0,"index":901},{"krate":0,"index":903},{"krate":0,"index":905},{"krate":0,"index":907},{"krate":0,"index":909},{"krate":0,"index":911},{"krate":0,"index":913},{"krate":0,"index":915},{"krate":0,"index":917},{"krate":0,"index":919},{"krate":0,"index":921},{"krate":0,"index":923},{"krate":0,"index":925},{"krate":0,"index":927},{"krate":0,"index":929},{"krate":0,"index":931},{"krate":0,"index":933},{"krate":0,"index":935},{"krate":0,"index":937},{"krate":0,"index":939},{"krate":0,"index":941},{"krate":0,"index":943},{"krate":0,"index":945},{"krate":0,"index":947},{"krate":0,"index":949},{"krate":0,"index":951},{"krate":0,"index":953},{"krate":0,"index":955},{"krate":0,"index":957},{"krate":0,"index":959},{"krate":0,"index":961},{"krate":0,"index":963},{"krate":0,"index":965},{"krate":0,"index":967},{"krate":0,"index":969},{"krate":0,"index":971},{"krate":0,"index":973},{"krate":0,"index":975},{"krate":0,"index":977},{"krate":0,"index":979},{"krate":0,"index":981},{"krate":0,"index":983},{"krate":0,"index":985},{"krate":0,"index":987}],"decl_id":null,"docs":" indicates which parser returned an error\n","sig":null,"attributes":[{"value":"/ indicates which parser returned an error","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18154,"byte_end":18198,"line_start":588,"line_end":588,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":139},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":18984,"byte_end":18996,"line_start":648,"line_end":648,"column_start":8,"column_end":20},"name":"error_to_u32","qualname":"::util::error_to_u32","value":"pub fn error_to_u32<E>(&ErrorKind<E>) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":21713,"byte_end":21724,"line_start":709,"line_end":709,"column_start":12,"column_end":23},"name":"description","qualname":"<ErrorKind<E>>::description","value":"pub fn description(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1013},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":25967,"byte_end":25971,"line_start":18,"line_end":18,"column_start":3,"column_end":7},"name":"Code","qualname":"::internal::Err::Code","value":"Err::Code(ErrorKind<E>)","parent":{"krate":0,"index":1010},"children":[],"decl_id":null,"docs":" An error code, represented by an ErrorKind, which can contain a custom error code represented by E\n","sig":null,"attributes":[{"value":"/ An error code, represented by an ErrorKind, which can contain a custom error code represented by E","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":25862,"byte_end":25964,"line_start":17,"line_end":17,"column_start":3,"column_end":105}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1016},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":26029,"byte_end":26033,"line_start":20,"line_end":20,"column_start":3,"column_end":7},"name":"Node","qualname":"::internal::Err::Node","value":"Err::Node(ErrorKind<E>, Box<Err<P, E>>)","parent":{"krate":0,"index":1010},"children":[],"decl_id":null,"docs":" An error code, and the next error\n","sig":null,"attributes":[{"value":"/ An error code, and the next error","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":25989,"byte_end":26026,"line_start":19,"line_end":19,"column_start":3,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1020},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":26110,"byte_end":26118,"line_start":22,"line_end":22,"column_start":3,"column_end":11},"name":"Position","qualname":"::internal::Err::Position","value":"Err::Position(ErrorKind<E>, P)","parent":{"krate":0,"index":1010},"children":[],"decl_id":null,"docs":" An error code, and the input position\n","sig":null,"attributes":[{"value":"/ An error code, and the input position","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":26066,"byte_end":26107,"line_start":21,"line_end":21,"column_start":3,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1024},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":26198,"byte_end":26210,"line_start":24,"line_end":24,"column_start":3,"column_end":15},"name":"NodePosition","qualname":"::internal::Err::NodePosition","value":"Err::NodePosition(ErrorKind<E>, P, Box<Err<P, E>>)","parent":{"krate":0,"index":1010},"children":[],"decl_id":null,"docs":" An error code, the input position and the next error\n","sig":null,"attributes":[{"value":"/ An error code, the input position and the next error","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":26139,"byte_end":26195,"line_start":23,"line_end":23,"column_start":3,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":1010},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":25846,"byte_end":25849,"line_start":16,"line_end":16,"column_start":10,"column_end":13},"name":"Err","qualname":"::internal::Err","value":"pub enum Err<P, E = u32> {\n    Code(ErrorKind<E>),\n    Node(ErrorKind<E>, Box<Err<P, E>>),\n    Position(ErrorKind<E>, P),\n    NodePosition(ErrorKind<E>, P, Box<Err<P, E>>),\n}","parent":null,"children":[{"krate":0,"index":1013},{"krate":0,"index":1016},{"krate":0,"index":1020},{"krate":0,"index":1024}],"decl_id":null,"docs":" Contains the error that a parser can return","sig":null,"attributes":[{"value":"/ Contains the error that a parser can return","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":25479,"byte_end":25526,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":25527,"byte_end":25530,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ It can represent a linked list of errors, indicating the path taken in the parsing tree, with corresponding position in the input data.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":25531,"byte_end":25670,"line_start":13,"line_end":13,"column_start":1,"column_end":140}},{"value":"/ It depends on P, the input position (for a &[u8] parser, it would be a &[u8]), and E, the custom error type (by default, u32)","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":25671,"byte_end":25800,"line_start":14,"line_end":14,"column_start":1,"column_end":130}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1053},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":26432,"byte_end":26439,"line_start":31,"line_end":31,"column_start":3,"column_end":10},"name":"Unknown","qualname":"::internal::Needed::Unknown","value":"Needed::Unknown","parent":{"krate":0,"index":1052},"children":[],"decl_id":null,"docs":" needs more data, but we do not know how much\n","sig":null,"attributes":[{"value":"/ needs more data, but we do not know how much","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":26381,"byte_end":26429,"line_start":30,"line_end":30,"column_start":3,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1055},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":26481,"byte_end":26485,"line_start":33,"line_end":33,"column_start":3,"column_end":7},"name":"Size","qualname":"::internal::Needed::Size","value":"Needed::Size(usize)","parent":{"krate":0,"index":1052},"children":[],"decl_id":null,"docs":" contains the required data size\n","sig":null,"attributes":[{"value":"/ contains the required data size","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":26443,"byte_end":26478,"line_start":32,"line_end":32,"column_start":3,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":1052},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":26370,"byte_end":26376,"line_start":29,"line_end":29,"column_start":10,"column_end":16},"name":"Needed","qualname":"::internal::Needed","value":"pub enum Needed { Unknown, Size(usize), }","parent":null,"children":[{"krate":0,"index":1053},{"krate":0,"index":1055}],"decl_id":null,"docs":" Contains information on needed data if a parser returned `Incomplete`\n","sig":null,"attributes":[{"value":"/ Contains information on needed data if a parser returned `Incomplete`","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":26246,"byte_end":26319,"line_start":27,"line_end":27,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":26519,"byte_end":26527,"line_start":37,"line_end":37,"column_start":10,"column_end":18},"name":"is_known","qualname":"<Needed>::is_known","value":"pub fn is_known(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":26677,"byte_end":26680,"line_start":43,"line_end":43,"column_start":10,"column_end":13},"name":"map","qualname":"<Needed>::map","value":"pub fn map<F: FnOnce(usize) -> usize>(Self, F) -> Needed","parent":null,"children":[],"decl_id":null,"docs":" Maps a `Needed` to `Needed` by appling a function to a contained `Size` value.\n","sig":null,"attributes":[{"value":"/ Maps a `Needed` to `Needed` by appling a function to a contained `Size` value.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":26573,"byte_end":26655,"line_start":41,"line_end":41,"column_start":3,"column_end":85}},{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":26658,"byte_end":26667,"line_start":42,"line_end":42,"column_start":3,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1074},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":27167,"byte_end":27171,"line_start":58,"line_end":58,"column_start":3,"column_end":7},"name":"Done","qualname":"::internal::IResult::Done","value":"IResult::Done(I, O)","parent":{"krate":0,"index":1070},"children":[],"decl_id":null,"docs":" indicates a correct parsing, the first field containing the rest of the unparsed data, the second field contains the parsed data\n","sig":null,"attributes":[{"value":"/ indicates a correct parsing, the first field containing the rest of the unparsed data, the second field contains the parsed data","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":27032,"byte_end":27164,"line_start":57,"line_end":57,"column_start":4,"column_end":136}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1078},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":27344,"byte_end":27349,"line_start":60,"line_end":60,"column_start":3,"column_end":8},"name":"Error","qualname":"::internal::IResult::Error","value":"IResult::Error(Err<I, E>)","parent":{"krate":0,"index":1070},"children":[],"decl_id":null,"docs":" contains a Err, an enum that can indicate an error code, a position in the input, and a pointer to another error, making a list of errors in the parsing tree\n","sig":null,"attributes":[{"value":"/ contains a Err, an enum that can indicate an error code, a position in the input, and a pointer to another error, making a list of errors in the parsing tree","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":27180,"byte_end":27341,"line_start":59,"line_end":59,"column_start":3,"column_end":164}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1081},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":27469,"byte_end":27479,"line_start":62,"line_end":62,"column_start":3,"column_end":13},"name":"Incomplete","qualname":"::internal::IResult::Incomplete","value":"IResult::Incomplete(Needed)","parent":{"krate":0,"index":1070},"children":[],"decl_id":null,"docs":" Incomplete contains a Needed, an enum than can represent a known quantity of input data, or unknown\n","sig":null,"attributes":[{"value":"/ Incomplete contains a Needed, an enum than can represent a known quantity of input data, or unknown","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":27363,"byte_end":27466,"line_start":61,"line_end":61,"column_start":3,"column_end":106}}]},{"kind":"Enum","id":{"krate":0,"index":1070},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":27008,"byte_end":27015,"line_start":56,"line_end":56,"column_start":10,"column_end":17},"name":"IResult","qualname":"::internal::IResult","value":"pub enum IResult<I, O, E = u32> {\n    Done(I, O),\n    Error(Err<I, E>),\n    Incomplete(Needed),\n}","parent":null,"children":[{"krate":0,"index":1074},{"krate":0,"index":1078},{"krate":0,"index":1081}],"decl_id":null,"docs":" Holds the result of parsing functions","sig":null,"attributes":[{"value":"/ Holds the result of parsing functions","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":26817,"byte_end":26858,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":26859,"byte_end":26862,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ It depends on I, the input type, O, the output type, and E, the error type (by default u32)","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":26863,"byte_end":26958,"line_start":53,"line_end":53,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":26959,"byte_end":26962,"line_start":54,"line_end":54,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":27529,"byte_end":27536,"line_start":66,"line_end":66,"column_start":10,"column_end":17},"name":"is_done","qualname":"<IResult<I, O, E>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":27642,"byte_end":27648,"line_start":73,"line_end":73,"column_start":10,"column_end":16},"name":"is_err","qualname":"<IResult<I, O, E>>::is_err","value":"pub fn is_err(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":27752,"byte_end":27765,"line_start":80,"line_end":80,"column_start":10,"column_end":23},"name":"is_incomplete","qualname":"<IResult<I, O, E>>::is_incomplete","value":"pub fn is_incomplete(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":28058,"byte_end":28061,"line_start":91,"line_end":91,"column_start":10,"column_end":13},"name":"map","qualname":"<IResult<I, O, E>>::map","value":"pub fn map<N, F: FnOnce(O) -> N>(Self, F) -> IResult<I, N, E>","parent":null,"children":[],"decl_id":null,"docs":" Maps a `IResult<I, O, E>` to `IResult<I, N, E>` by appling a function\n to a contained `Done` value, leaving `Error` and `Incomplete` value\n untouched.\n","sig":null,"attributes":[{"value":"/ Maps a `IResult<I, O, E>` to `IResult<I, N, E>` by appling a function","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":27872,"byte_end":27945,"line_start":87,"line_end":87,"column_start":3,"column_end":76}},{"value":"/ to a contained `Done` value, leaving `Error` and `Incomplete` value","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":27948,"byte_end":28019,"line_start":88,"line_end":88,"column_start":3,"column_end":74}},{"value":"/ untouched.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":28022,"byte_end":28036,"line_start":89,"line_end":89,"column_start":3,"column_end":17}},{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":28039,"byte_end":28048,"line_start":90,"line_end":90,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":28443,"byte_end":28450,"line_start":103,"line_end":103,"column_start":10,"column_end":17},"name":"map_inc","qualname":"<IResult<I, O, E>>::map_inc","value":"pub fn map_inc<F>(Self, F) -> IResult<I, O, E> where F: FnOnce(Needed) ->\nNeeded","parent":null,"children":[],"decl_id":null,"docs":" Maps a `IResult<I, O, E>` to `IResult<I, O, E>` by appling a function\n to a contained `Incomplete` value, leaving `Done` and `Error` value\n untouched.\n","sig":null,"attributes":[{"value":"/ Maps a `IResult<I, O, E>` to `IResult<I, O, E>` by appling a function","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":28257,"byte_end":28330,"line_start":99,"line_end":99,"column_start":3,"column_end":76}},{"value":"/ to a contained `Incomplete` value, leaving `Done` and `Error` value","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":28333,"byte_end":28404,"line_start":100,"line_end":100,"column_start":3,"column_end":74}},{"value":"/ untouched.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":28407,"byte_end":28421,"line_start":101,"line_end":101,"column_start":3,"column_end":17}},{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":28424,"byte_end":28433,"line_start":102,"line_end":102,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":28850,"byte_end":28857,"line_start":116,"line_end":116,"column_start":10,"column_end":17},"name":"map_err","qualname":"<IResult<I, O, E>>::map_err","value":"pub fn map_err<N, F>(Self, F) -> IResult<I, O, N> where F: FnOnce(Err<I, E>)\n-> Err<I, N>","parent":null,"children":[],"decl_id":null,"docs":" Maps a `IResult<I, O, E>` to `IResult<I, O, N>` by appling a function\n to a contained `Error` value, leaving `Done` and `Incomplete` value\n untouched.\n","sig":null,"attributes":[{"value":"/ Maps a `IResult<I, O, E>` to `IResult<I, O, N>` by appling a function","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":28664,"byte_end":28737,"line_start":112,"line_end":112,"column_start":3,"column_end":76}},{"value":"/ to a contained `Error` value, leaving `Done` and `Incomplete` value","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":28740,"byte_end":28811,"line_start":113,"line_end":113,"column_start":3,"column_end":74}},{"value":"/ untouched.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":28814,"byte_end":28828,"line_start":114,"line_end":114,"column_start":3,"column_end":17}},{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":28831,"byte_end":28840,"line_start":115,"line_end":115,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":29181,"byte_end":29187,"line_start":127,"line_end":127,"column_start":10,"column_end":16},"name":"unwrap","qualname":"<IResult<I, O, E>>::unwrap","value":"pub fn unwrap(Self) -> (I, O)","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the contained `Done(I, O)` value, or panic if the `IResult` is not\n `Done`.\n","sig":null,"attributes":[{"value":"/ Unwrap the contained `Done(I, O)` value, or panic if the `IResult` is not","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":29080,"byte_end":29157,"line_start":125,"line_end":125,"column_start":3,"column_end":80}},{"value":"/ `Done`.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":29160,"byte_end":29171,"line_start":126,"line_end":126,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":29528,"byte_end":29538,"line_start":137,"line_end":137,"column_start":10,"column_end":20},"name":"unwrap_inc","qualname":"<IResult<I, O, E>>::unwrap_inc","value":"pub fn unwrap_inc(Self) -> Needed","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the contained `Done(I, O)` value, or panic if the `IResult` is not\n `Done`.\n","sig":null,"attributes":[{"value":"/ Unwrap the contained `Done(I, O)` value, or panic if the `IResult` is not","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":29427,"byte_end":29504,"line_start":135,"line_end":135,"column_start":3,"column_end":80}},{"value":"/ `Done`.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":29507,"byte_end":29518,"line_start":136,"line_end":136,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":29876,"byte_end":29886,"line_start":147,"line_end":147,"column_start":10,"column_end":20},"name":"unwrap_err","qualname":"<IResult<I, O, E>>::unwrap_err","value":"pub fn unwrap_err(Self) -> Err<I, E>","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the contained `Done(I, O)` value, or panic if the `IResult` is not\n `Done`.\n","sig":null,"attributes":[{"value":"/ Unwrap the contained `Done(I, O)` value, or panic if the `IResult` is not","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":29775,"byte_end":29852,"line_start":145,"line_end":145,"column_start":3,"column_end":80}},{"value":"/ `Done`.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":29855,"byte_end":29866,"line_start":146,"line_end":146,"column_start":3,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":175},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":30142,"byte_end":30150,"line_start":156,"line_end":156,"column_start":11,"column_end":19},"name":"GetInput","qualname":"::internal::GetInput","value":"GetInput<I>","parent":null,"children":[{"krate":0,"index":177}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":30161,"byte_end":30176,"line_start":157,"line_end":157,"column_start":6,"column_end":21},"name":"remaining_input","qualname":"::internal::GetInput::remaining_input","value":"pub fn remaining_input(&Self) -> Option<I>","parent":{"krate":0,"index":175},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":178},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":30211,"byte_end":30220,"line_start":160,"line_end":160,"column_start":11,"column_end":20},"name":"GetOutput","qualname":"::internal::GetOutput","value":"GetOutput<O>","parent":null,"children":[{"krate":0,"index":180}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":30231,"byte_end":30237,"line_start":161,"line_end":161,"column_start":6,"column_end":12},"name":"output","qualname":"::internal::GetOutput::output","value":"pub fn output(&Self) -> Option<O>","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":348},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":213272,"byte_end":213278,"line_start":21,"line_end":21,"column_start":8,"column_end":14},"name":"tag_cl","qualname":"::nom::tag_cl","value":"pub fn tag_cl<'a, 'b>(&'a [u8])\n-> Box<Fn(&'b [u8]) -> IResult<&'b [u8], &'b [u8]> + 'a>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":213255,"byte_end":213264,"line_start":20,"line_end":20,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":352},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":213641,"byte_end":213646,"line_start":33,"line_end":33,"column_start":8,"column_end":13},"name":"print","qualname":"::nom::print","value":"pub fn print<T: Debug>(T) -> IResult<T, ()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"core\"))","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":213594,"byte_end":213623,"line_start":31,"line_end":31,"column_start":1,"column_end":30}},{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":213624,"byte_end":213633,"line_start":32,"line_end":32,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":354},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":213752,"byte_end":213757,"line_start":39,"line_end":39,"column_start":8,"column_end":13},"name":"begin","qualname":"::nom::begin","value":"pub fn begin(&[u8]) -> IResult<(), &[u8]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":213735,"byte_end":213744,"line_start":38,"line_end":38,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":355},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":213953,"byte_end":213968,"line_start":46,"line_end":46,"column_start":8,"column_end":23},"name":"not_line_ending","qualname":"::nom::not_line_ending","value":"pub fn not_line_ending(&[u8]) -> IResult<&[u8], &[u8]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":356},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":214292,"byte_end":214303,"line_start":61,"line_end":61,"column_start":8,"column_end":19},"name":"line_ending","qualname":"::nom::line_ending","value":"pub fn line_ending(&[u8]) -> IResult<&[u8], &[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a line feed\n","sig":null,"attributes":[{"value":"/ Recognizes a line feed","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":214248,"byte_end":214274,"line_start":59,"line_end":59,"column_start":1,"column_end":27}},{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":214275,"byte_end":214284,"line_start":60,"line_end":60,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":357},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":214380,"byte_end":214393,"line_start":66,"line_end":66,"column_start":8,"column_end":21},"name":"is_alphabetic","qualname":"::nom::is_alphabetic","value":"pub fn is_alphabetic(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":214363,"byte_end":214372,"line_start":65,"line_end":65,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":358},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":214495,"byte_end":214503,"line_start":71,"line_end":71,"column_start":8,"column_end":16},"name":"is_digit","qualname":"::nom::is_digit","value":"pub fn is_digit(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":214478,"byte_end":214487,"line_start":70,"line_end":70,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":359},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":214572,"byte_end":214584,"line_start":76,"line_end":76,"column_start":8,"column_end":20},"name":"is_hex_digit","qualname":"::nom::is_hex_digit","value":"pub fn is_hex_digit(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":214555,"byte_end":214564,"line_start":75,"line_end":75,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":360},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":214723,"byte_end":214735,"line_start":83,"line_end":83,"column_start":8,"column_end":20},"name":"is_oct_digit","qualname":"::nom::is_oct_digit","value":"pub fn is_oct_digit(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":214706,"byte_end":214715,"line_start":82,"line_end":82,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":361},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":214804,"byte_end":214819,"line_start":88,"line_end":88,"column_start":8,"column_end":23},"name":"is_alphanumeric","qualname":"::nom::is_alphanumeric","value":"pub fn is_alphanumeric(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":214787,"byte_end":214796,"line_start":87,"line_end":87,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":362},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":214897,"byte_end":214905,"line_start":93,"line_end":93,"column_start":8,"column_end":16},"name":"is_space","qualname":"::nom::is_space","value":"pub fn is_space(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":214880,"byte_end":214889,"line_start":92,"line_end":92,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":373},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":215344,"byte_end":215349,"line_start":106,"line_end":106,"column_start":8,"column_end":13},"name":"alpha","qualname":"::nom::alpha","value":"pub fn alpha<'a, T: ?Sized>(&'a T) -> IResult<&'a T, &'a T> where\nT: Index<Range<usize>, Output = T> + Index<RangeFrom<usize>, Output = T>,\n&'a T: IterIndices + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes lowercase and uppercase alphabetic characters: a-zA-Z\n","sig":null,"attributes":[{"value":"/ Recognizes lowercase and uppercase alphabetic characters: a-zA-Z","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":215268,"byte_end":215336,"line_start":105,"line_end":105,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":376},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":215959,"byte_end":215964,"line_start":127,"line_end":127,"column_start":8,"column_end":13},"name":"digit","qualname":"::nom::digit","value":"pub fn digit<'a, T: ?Sized>(&'a T) -> IResult<&'a T, &'a T> where\nT: Index<Range<usize>, Output = T> + Index<RangeFrom<usize>, Output = T>,\n&'a T: IterIndices + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes numerical characters: 0-9\n","sig":null,"attributes":[{"value":"/ Recognizes numerical characters: 0-9","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":215911,"byte_end":215951,"line_start":126,"line_end":126,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":379},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":216597,"byte_end":216606,"line_start":148,"line_end":148,"column_start":8,"column_end":17},"name":"hex_digit","qualname":"::nom::hex_digit","value":"pub fn hex_digit<'a, T: ?Sized>(&'a T) -> IResult<&'a T, &'a T> where\nT: Index<Range<usize>, Output = T> + Index<RangeFrom<usize>, Output = T>,\n&'a T: IterIndices + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes hexadecimal numerical characters: 0-9, A-F, a-f\n","sig":null,"attributes":[{"value":"/ Recognizes hexadecimal numerical characters: 0-9, A-F, a-f","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":216527,"byte_end":216589,"line_start":147,"line_end":147,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":382},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":217222,"byte_end":217231,"line_start":169,"line_end":169,"column_start":8,"column_end":17},"name":"oct_digit","qualname":"::nom::oct_digit","value":"pub fn oct_digit<'a, T: ?Sized>(&'a T) -> IResult<&'a T, &'a T> where\nT: Index<Range<usize>, Output = T> + Index<RangeFrom<usize>, Output = T>,\n&'a T: IterIndices + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes octal characters: 0-7\n","sig":null,"attributes":[{"value":"/ Recognizes octal characters: 0-7","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":217178,"byte_end":217214,"line_start":168,"line_end":168,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":385},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":217872,"byte_end":217884,"line_start":190,"line_end":190,"column_start":8,"column_end":20},"name":"alphanumeric","qualname":"::nom::alphanumeric","value":"pub fn alphanumeric<'a, T: ?Sized>(&'a T) -> IResult<&'a T, &'a T> where\nT: Index<Range<usize>, Output = T> + Index<RangeFrom<usize>, Output = T>,\n&'a T: IterIndices + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes numerical and alphabetic characters: 0-9a-zA-Z\n","sig":null,"attributes":[{"value":"/ Recognizes numerical and alphabetic characters: 0-9a-zA-Z","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":217803,"byte_end":217864,"line_start":189,"line_end":189,"column_start":1,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":388},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":218502,"byte_end":218507,"line_start":211,"line_end":211,"column_start":8,"column_end":13},"name":"space","qualname":"::nom::space","value":"pub fn space<'a, T: ?Sized>(&'a T) -> IResult<&'a T, &'a T> where\nT: Index<Range<usize>, Output = T> + Index<RangeFrom<usize>, Output = T>,\n&'a T: IterIndices + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes spaces and tabs\n","sig":null,"attributes":[{"value":"/ Recognizes spaces and tabs","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":218464,"byte_end":218494,"line_start":210,"line_end":210,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":391},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":219181,"byte_end":219191,"line_start":233,"line_end":233,"column_start":8,"column_end":18},"name":"multispace","qualname":"::nom::multispace","value":"pub fn multispace<'a, T: ?Sized>(&'a T) -> IResult<&'a T, &'a T> where\nT: Index<Range<usize>, Output = T> + Index<RangeFrom<usize>, Output = T>,\n&'a T: IterIndices + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes spaces, tabs, carriage returns and line feeds\n","sig":null,"attributes":[{"value":"/ Recognizes spaces, tabs, carriage returns and line feeds","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":219113,"byte_end":219173,"line_start":232,"line_end":232,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":394},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":219844,"byte_end":219856,"line_start":254,"line_end":254,"column_start":8,"column_end":20},"name":"sized_buffer","qualname":"::nom::sized_buffer","value":"pub fn sized_buffer(&[u8]) -> IResult<&[u8], &[u8]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":395},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":220134,"byte_end":220146,"line_start":268,"line_end":268,"column_start":8,"column_end":20},"name":"length_value","qualname":"::nom::length_value","value":"pub fn length_value(&[u8]) -> IResult<&[u8], &[u8]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":396},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":220563,"byte_end":220568,"line_start":284,"line_end":284,"column_start":8,"column_end":13},"name":"be_u8","qualname":"::nom::be_u8","value":"pub fn be_u8(&[u8]) -> IResult<&[u8], u8>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 1 byte integer (equivalent to take!(1)\n","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 1 byte integer (equivalent to take!(1)","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":220480,"byte_end":220545,"line_start":282,"line_end":282,"column_start":1,"column_end":66}},{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":220546,"byte_end":220555,"line_start":283,"line_end":283,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":397},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":220764,"byte_end":220770,"line_start":294,"line_end":294,"column_start":8,"column_end":14},"name":"be_u16","qualname":"::nom::be_u16","value":"pub fn be_u16(&[u8]) -> IResult<&[u8], u16>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes big endian unsigned 2 bytes integer\n","sig":null,"attributes":[{"value":"/ Recognizes big endian unsigned 2 bytes integer","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":220696,"byte_end":220746,"line_start":292,"line_end":292,"column_start":1,"column_end":51}},{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":220747,"byte_end":220756,"line_start":293,"line_end":293,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":398},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":221016,"byte_end":221022,"line_start":305,"line_end":305,"column_start":8,"column_end":14},"name":"be_u32","qualname":"::nom::be_u32","value":"pub fn be_u32(&[u8]) -> IResult<&[u8], u32>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes big endian unsigned 4 bytes integer\n","sig":null,"attributes":[{"value":"/ Recognizes big endian unsigned 4 bytes integer","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":220948,"byte_end":220998,"line_start":303,"line_end":303,"column_start":1,"column_end":51}},{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":220999,"byte_end":221008,"line_start":304,"line_end":304,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":399},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":221316,"byte_end":221322,"line_start":316,"line_end":316,"column_start":8,"column_end":14},"name":"be_u64","qualname":"::nom::be_u64","value":"pub fn be_u64(&[u8]) -> IResult<&[u8], u64>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes big endian unsigned 8 bytes integer\n","sig":null,"attributes":[{"value":"/ Recognizes big endian unsigned 8 bytes integer","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":221248,"byte_end":221298,"line_start":314,"line_end":314,"column_start":1,"column_end":51}},{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":221299,"byte_end":221308,"line_start":315,"line_end":315,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":400},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":221730,"byte_end":221735,"line_start":328,"line_end":328,"column_start":8,"column_end":13},"name":"be_i8","qualname":"::nom::be_i8","value":"pub fn be_i8(&[u8]) -> IResult<&[u8], i8>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 1 byte integer (equivalent to take!(1)\n","sig":null,"attributes":[{"value":"/ Recognizes a signed 1 byte integer (equivalent to take!(1)","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":221650,"byte_end":221712,"line_start":326,"line_end":326,"column_start":1,"column_end":63}},{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":221713,"byte_end":221722,"line_start":327,"line_end":327,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":401},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":221874,"byte_end":221880,"line_start":334,"line_end":334,"column_start":8,"column_end":14},"name":"be_i16","qualname":"::nom::be_i16","value":"pub fn be_i16(&[u8]) -> IResult<&[u8], i16>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes big endian signed 2 bytes integer\n","sig":null,"attributes":[{"value":"/ Recognizes big endian signed 2 bytes integer","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":221808,"byte_end":221856,"line_start":332,"line_end":332,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":221857,"byte_end":221866,"line_start":333,"line_end":333,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":402},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":222022,"byte_end":222028,"line_start":340,"line_end":340,"column_start":8,"column_end":14},"name":"be_i32","qualname":"::nom::be_i32","value":"pub fn be_i32(&[u8]) -> IResult<&[u8], i32>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes big endian signed 4 bytes integer\n","sig":null,"attributes":[{"value":"/ Recognizes big endian signed 4 bytes integer","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":221956,"byte_end":222004,"line_start":338,"line_end":338,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":222005,"byte_end":222014,"line_start":339,"line_end":339,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":403},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":222170,"byte_end":222176,"line_start":346,"line_end":346,"column_start":8,"column_end":14},"name":"be_i64","qualname":"::nom::be_i64","value":"pub fn be_i64(&[u8]) -> IResult<&[u8], i64>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes big endian signed 8 bytes integer\n","sig":null,"attributes":[{"value":"/ Recognizes big endian signed 8 bytes integer","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":222104,"byte_end":222152,"line_start":344,"line_end":344,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":222153,"byte_end":222162,"line_start":345,"line_end":345,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":404},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":222335,"byte_end":222340,"line_start":352,"line_end":352,"column_start":8,"column_end":13},"name":"le_u8","qualname":"::nom::le_u8","value":"pub fn le_u8(&[u8]) -> IResult<&[u8], u8>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 1 byte integer (equivalent to take!(1)\n","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 1 byte integer (equivalent to take!(1)","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":222252,"byte_end":222317,"line_start":350,"line_end":350,"column_start":1,"column_end":66}},{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":222318,"byte_end":222327,"line_start":351,"line_end":351,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":405},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":222539,"byte_end":222545,"line_start":362,"line_end":362,"column_start":8,"column_end":14},"name":"le_u16","qualname":"::nom::le_u16","value":"pub fn le_u16(&[u8]) -> IResult<&[u8], u16>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes little endian unsigned 2 bytes integer\n","sig":null,"attributes":[{"value":"/ Recognizes little endian unsigned 2 bytes integer","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":222468,"byte_end":222521,"line_start":360,"line_end":360,"column_start":1,"column_end":54}},{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":222522,"byte_end":222531,"line_start":361,"line_end":361,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":406},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":222794,"byte_end":222800,"line_start":373,"line_end":373,"column_start":8,"column_end":14},"name":"le_u32","qualname":"::nom::le_u32","value":"pub fn le_u32(&[u8]) -> IResult<&[u8], u32>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes little endian unsigned 4 bytes integer\n","sig":null,"attributes":[{"value":"/ Recognizes little endian unsigned 4 bytes integer","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":222723,"byte_end":222776,"line_start":371,"line_end":371,"column_start":1,"column_end":54}},{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":222777,"byte_end":222786,"line_start":372,"line_end":372,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":407},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":223097,"byte_end":223103,"line_start":384,"line_end":384,"column_start":8,"column_end":14},"name":"le_u64","qualname":"::nom::le_u64","value":"pub fn le_u64(&[u8]) -> IResult<&[u8], u64>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes little endian unsigned 8 bytes integer\n","sig":null,"attributes":[{"value":"/ Recognizes little endian unsigned 8 bytes integer","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":223026,"byte_end":223079,"line_start":382,"line_end":382,"column_start":1,"column_end":54}},{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":223080,"byte_end":223089,"line_start":383,"line_end":383,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":408},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":223511,"byte_end":223516,"line_start":396,"line_end":396,"column_start":8,"column_end":13},"name":"le_i8","qualname":"::nom::le_i8","value":"pub fn le_i8(&[u8]) -> IResult<&[u8], i8>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 1 byte integer (equivalent to take!(1)\n","sig":null,"attributes":[{"value":"/ Recognizes a signed 1 byte integer (equivalent to take!(1)","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":223431,"byte_end":223493,"line_start":394,"line_end":394,"column_start":1,"column_end":63}},{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":223494,"byte_end":223503,"line_start":395,"line_end":395,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":409},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":223658,"byte_end":223664,"line_start":402,"line_end":402,"column_start":8,"column_end":14},"name":"le_i16","qualname":"::nom::le_i16","value":"pub fn le_i16(&[u8]) -> IResult<&[u8], i16>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes little endian signed 2 bytes integer\n","sig":null,"attributes":[{"value":"/ Recognizes little endian signed 2 bytes integer","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":223589,"byte_end":223640,"line_start":400,"line_end":400,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":223641,"byte_end":223650,"line_start":401,"line_end":401,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":410},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":223809,"byte_end":223815,"line_start":408,"line_end":408,"column_start":8,"column_end":14},"name":"le_i32","qualname":"::nom::le_i32","value":"pub fn le_i32(&[u8]) -> IResult<&[u8], i32>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes little endian signed 4 bytes integer\n","sig":null,"attributes":[{"value":"/ Recognizes little endian signed 4 bytes integer","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":223740,"byte_end":223791,"line_start":406,"line_end":406,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":223792,"byte_end":223801,"line_start":407,"line_end":407,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":411},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":223960,"byte_end":223966,"line_start":414,"line_end":414,"column_start":8,"column_end":14},"name":"le_i64","qualname":"::nom::le_i64","value":"pub fn le_i64(&[u8]) -> IResult<&[u8], i64>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes little endian signed 8 bytes integer\n","sig":null,"attributes":[{"value":"/ Recognizes little endian signed 8 bytes integer","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":223891,"byte_end":223942,"line_start":412,"line_end":412,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":223943,"byte_end":223952,"line_start":413,"line_end":413,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":418},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":225461,"byte_end":225467,"line_start":446,"line_end":446,"column_start":8,"column_end":14},"name":"be_f32","qualname":"::nom::be_f32","value":"pub fn be_f32(&[u8]) -> IResult<&[u8], f32>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes big endian 4 bytes floating point number\n","sig":null,"attributes":[{"value":"/ Recognizes big endian 4 bytes floating point number","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":225388,"byte_end":225443,"line_start":444,"line_end":444,"column_start":1,"column_end":56}},{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":225444,"byte_end":225453,"line_start":445,"line_end":445,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":419},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":225768,"byte_end":225774,"line_start":460,"line_end":460,"column_start":8,"column_end":14},"name":"be_f64","qualname":"::nom::be_f64","value":"pub fn be_f64(&[u8]) -> IResult<&[u8], f64>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes big endian 8 bytes floating point number\n","sig":null,"attributes":[{"value":"/ Recognizes big endian 8 bytes floating point number","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":225695,"byte_end":225750,"line_start":458,"line_end":458,"column_start":1,"column_end":56}},{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":225751,"byte_end":225760,"line_start":459,"line_end":459,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":420},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":226078,"byte_end":226084,"line_start":474,"line_end":474,"column_start":8,"column_end":14},"name":"le_f32","qualname":"::nom::le_f32","value":"pub fn le_f32(&[u8]) -> IResult<&[u8], f32>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes little endian 4 bytes floating point number\n","sig":null,"attributes":[{"value":"/ Recognizes little endian 4 bytes floating point number","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":226002,"byte_end":226060,"line_start":472,"line_end":472,"column_start":1,"column_end":59}},{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":226061,"byte_end":226070,"line_start":473,"line_end":473,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":421},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":226388,"byte_end":226394,"line_start":488,"line_end":488,"column_start":8,"column_end":14},"name":"le_f64","qualname":"::nom::le_f64","value":"pub fn le_f64(&[u8]) -> IResult<&[u8], f64>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes little endian 8 bytes floating point number\n","sig":null,"attributes":[{"value":"/ Recognizes little endian 8 bytes floating point number","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":226312,"byte_end":226370,"line_start":486,"line_end":486,"column_start":1,"column_end":59}},{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":226371,"byte_end":226380,"line_start":487,"line_end":487,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":422},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":226676,"byte_end":226683,"line_start":502,"line_end":502,"column_start":8,"column_end":15},"name":"hex_u32","qualname":"::nom::hex_u32","value":"pub fn hex_u32(&[u8]) -> IResult<&[u8], u32>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a hex-encoded integer\n","sig":null,"attributes":[{"value":"/ Recognizes a hex-encoded integer","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":226622,"byte_end":226658,"line_start":500,"line_end":500,"column_start":1,"column_end":37}},{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":226659,"byte_end":226668,"line_start":501,"line_end":501,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":423},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":227463,"byte_end":227466,"line_start":532,"line_end":532,"column_start":8,"column_end":11},"name":"eof","qualname":"::nom::eof","value":"pub fn eof<'a, T: ?Sized>(&'a T) -> IResult<&'a T, &'a T> where\nT: Index<Range<usize>, Output = T> + Index<RangeFrom<usize>, Output = T>,\n&'a T: InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes empty input buffers","sig":null,"attributes":[{"value":"/ Recognizes empty input buffers","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":227285,"byte_end":227319,"line_start":527,"line_end":527,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":227320,"byte_end":227323,"line_start":528,"line_end":528,"column_start":1,"column_end":4}},{"value":"/ useful to verify that the previous parsers used all of the input","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":227324,"byte_end":227392,"line_start":529,"line_end":529,"column_start":1,"column_end":69}},{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":227393,"byte_end":227402,"line_start":530,"line_end":530,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":426},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":227789,"byte_end":227798,"line_start":544,"line_end":544,"column_start":8,"column_end":17},"name":"non_empty","qualname":"::nom::non_empty","value":"pub fn non_empty<'a, T: ?Sized>(&'a T) -> IResult<&'a T, &'a T> where\nT: Index<Range<usize>, Output = T> + Index<RangeFrom<usize>, Output = T>,\n&'a T: InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes non empty buffers\n","sig":null,"attributes":[{"value":"/ Recognizes non empty buffers","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":227739,"byte_end":227771,"line_start":542,"line_end":542,"column_start":1,"column_end":33}},{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":227772,"byte_end":227781,"line_start":543,"line_end":543,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":429},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":228143,"byte_end":228147,"line_start":556,"line_end":556,"column_start":8,"column_end":12},"name":"rest","qualname":"::nom::rest","value":"pub fn rest(&[u8]) -> IResult<&[u8], &[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Return the remaining input.\n","sig":null,"attributes":[{"value":"/ Return the remaining input.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":228094,"byte_end":228125,"line_start":554,"line_end":554,"column_start":1,"column_end":32}},{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":228126,"byte_end":228135,"line_start":555,"line_end":555,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":430},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":228302,"byte_end":228308,"line_start":562,"line_end":562,"column_start":8,"column_end":14},"name":"rest_s","qualname":"::nom::rest_s","value":"pub fn rest_s(&str) -> IResult<&str, &str>","parent":null,"children":[],"decl_id":null,"docs":" Return the remaining input, for strings.\n","sig":null,"attributes":[{"value":"/ Return the remaining input, for strings.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":228240,"byte_end":228284,"line_start":560,"line_end":560,"column_start":1,"column_end":45}},{"value":"inline","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/nom.rs","byte_start":228285,"byte_end":228294,"line_start":561,"line_end":561,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1130},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/character.rs","byte_start":245159,"byte_end":245166,"line_start":121,"line_end":121,"column_start":12,"column_end":19},"name":"newline","qualname":"::character::newline","value":"pub fn newline(&[u8]) -> crate::IResult<&[u8], char, u32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":450},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/character.rs","byte_start":245196,"byte_end":245200,"line_start":123,"line_end":123,"column_start":8,"column_end":12},"name":"crlf","qualname":"::character::crlf","value":"pub fn crlf(&[u8]) -> IResult<&[u8], char>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1131},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/character.rs","byte_start":245489,"byte_end":245492,"line_start":135,"line_end":135,"column_start":12,"column_end":15},"name":"eol","qualname":"::character::eol","value":"pub fn eol(&[u8]) -> crate::IResult<&[u8], char, u32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1132},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/character.rs","byte_start":245534,"byte_end":245537,"line_start":136,"line_end":136,"column_start":12,"column_end":15},"name":"tab","qualname":"::character::tab","value":"pub fn tab(&[u8]) -> crate::IResult<&[u8], char, u32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":451},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/character.rs","byte_start":245567,"byte_end":245574,"line_start":138,"line_end":138,"column_start":8,"column_end":15},"name":"anychar","qualname":"::character::anychar","value":"pub fn anychar(&[u8]) -> IResult<&[u8], char>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1135},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":247277,"byte_end":247284,"line_start":17,"line_end":17,"column_start":3,"column_end":10},"name":"Element","qualname":"::stream::Input::Element","value":"Input::Element(I)","parent":{"krate":0,"index":1133},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1138},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":247291,"byte_end":247296,"line_start":18,"line_end":18,"column_start":3,"column_end":8},"name":"Empty","qualname":"::stream::Input::Empty","value":"Input::Empty","parent":{"krate":0,"index":1133},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1140},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":247300,"byte_end":247303,"line_start":19,"line_end":19,"column_start":3,"column_end":6},"name":"Eof","qualname":"::stream::Input::Eof","value":"Input::Eof(Option<I>)","parent":{"krate":0,"index":1133},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1133},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":247264,"byte_end":247269,"line_start":16,"line_end":16,"column_start":10,"column_end":15},"name":"Input","qualname":"::stream::Input","value":"pub enum Input<I> { Element(I), Empty, Eof(Option<I>), }","parent":null,"children":[{"krate":0,"index":1135},{"krate":0,"index":1138},{"krate":0,"index":1140}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1153},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":247473,"byte_end":247477,"line_start":26,"line_end":26,"column_start":3,"column_end":7},"name":"Done","qualname":"::stream::ConsumerState::Done","value":"ConsumerState::Done(M, O)","parent":{"krate":0,"index":1149},"children":[],"decl_id":null,"docs":" A value of type O has been produced\n","sig":null,"attributes":[{"value":"/ A value of type O has been produced","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":247431,"byte_end":247470,"line_start":25,"line_end":25,"column_start":3,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1157},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":247532,"byte_end":247537,"line_start":28,"line_end":28,"column_start":3,"column_end":8},"name":"Error","qualname":"::stream::ConsumerState::Error","value":"ConsumerState::Error(E)","parent":{"krate":0,"index":1149},"children":[],"decl_id":null,"docs":" An error of type E has been encountered\n","sig":null,"attributes":[{"value":"/ An error of type E has been encountered","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":247486,"byte_end":247529,"line_start":27,"line_end":27,"column_start":3,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1160},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":247617,"byte_end":247625,"line_start":30,"line_end":30,"column_start":3,"column_end":11},"name":"Continue","qualname":"::stream::ConsumerState::Continue","value":"ConsumerState::Continue(M)","parent":{"krate":0,"index":1149},"children":[],"decl_id":null,"docs":" Continue applying, and pass a message of type M to the data source\n","sig":null,"attributes":[{"value":"/ Continue applying, and pass a message of type M to the data source","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":247544,"byte_end":247614,"line_start":29,"line_end":29,"column_start":3,"column_end":73}}]},{"kind":"Enum","id":{"krate":0,"index":1149},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":247400,"byte_end":247413,"line_start":24,"line_end":24,"column_start":10,"column_end":23},"name":"ConsumerState","qualname":"::stream::ConsumerState","value":"pub enum ConsumerState<O, E = (), M = ()> {\n    Done(M, O),\n    Error(E),\n    Continue(M),\n}","parent":null,"children":[{"krate":0,"index":1153},{"krate":0,"index":1157},{"krate":0,"index":1160}],"decl_id":null,"docs":" Stores a consumer's current computation state\n","sig":null,"attributes":[{"value":"/ Stores a consumer's current computation state","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":247318,"byte_end":247367,"line_start":22,"line_end":22,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":247692,"byte_end":247695,"line_start":34,"line_end":34,"column_start":10,"column_end":13},"name":"map","qualname":"<ConsumerState<O, E, M>>::map","value":"pub fn map<P, F>(&Self, F) -> ConsumerState<P, E, M> where F: FnOnce(O) -> P","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":248002,"byte_end":248010,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"name":"flat_map","qualname":"<ConsumerState<O, E, M>>::flat_map","value":"pub fn flat_map<P, F>(&Self, F) -> ConsumerState<P, E, M> where\nF: FnOnce(M, O) -> ConsumerState<P, E, M>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":494},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":248494,"byte_end":248502,"line_start":52,"line_end":52,"column_start":11,"column_end":19},"name":"Consumer","qualname":"::stream::Consumer","value":"Consumer<I, O, E, M>","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":500}],"decl_id":null,"docs":" The Consumer trait wraps a computation and its state","sig":null,"attributes":[{"value":"/ The Consumer trait wraps a computation and its state","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":248317,"byte_end":248373,"line_start":49,"line_end":49,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":248374,"byte_end":248377,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ it depends on the input type I, the produced value's type O, the error type E, and the message type M","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":248378,"byte_end":248483,"line_start":51,"line_end":51,"column_start":1,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":248612,"byte_end":248618,"line_start":55,"line_end":55,"column_start":6,"column_end":12},"name":"handle","qualname":"::stream::Consumer::handle","value":"pub fn handle(&mut Self, Input<I>) -> &ConsumerState<O, E, M>","parent":{"krate":0,"index":494},"children":[],"decl_id":null,"docs":" implement handle for the current computation, returning the new state of the consumer\n","sig":null,"attributes":[{"value":"/ implement handle for the current computation, returning the new state of the consumer","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":248517,"byte_end":248606,"line_start":54,"line_end":54,"column_start":3,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":248710,"byte_end":248715,"line_start":57,"line_end":57,"column_start":6,"column_end":11},"name":"state","qualname":"::stream::Consumer::state","value":"pub fn state(&Self) -> &ConsumerState<O, E, M>","parent":{"krate":0,"index":494},"children":[],"decl_id":null,"docs":" returns the current state\n","sig":null,"attributes":[{"value":"/ returns the current state","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":248675,"byte_end":248704,"line_start":56,"line_end":56,"column_start":3,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":501},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":249117,"byte_end":249125,"line_start":66,"line_end":66,"column_start":11,"column_end":19},"name":"Producer","qualname":"::stream::Producer","value":"Producer<'b, I, M: 'b>","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":509}],"decl_id":null,"docs":" The producer wraps a data source, like file or network, and applies a consumer on it","sig":null,"attributes":[{"value":"/ The producer wraps a data source, like file or network, and applies a consumer on it","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":248753,"byte_end":248841,"line_start":61,"line_end":61,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":248842,"byte_end":248845,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ it handles buffer copying and reallocation, to provide streaming patterns.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":248846,"byte_end":248924,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ it depends on the input type I, and the message type M.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":248925,"byte_end":248984,"line_start":64,"line_end":64,"column_start":1,"column_end":60}},{"value":"/ the consumer can change the way data is produced (for example, to seek in the source) by sending a message of type M.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":248985,"byte_end":249106,"line_start":65,"line_end":65,"column_start":1,"column_end":122}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":249804,"byte_end":249809,"line_start":80,"line_end":80,"column_start":6,"column_end":11},"name":"apply","qualname":"::stream::Producer::apply","value":"pub fn apply<'a, O, E>(&'b mut Self, &'a mut Consumer<I, O, E, M>)\n-> &'a ConsumerState<O, E, M>","parent":{"krate":0,"index":501},"children":[],"decl_id":null,"docs":" Applies a consumer once on the produced data, and return the consumer's state","sig":null,"attributes":[{"value":"/ Applies a consumer once on the produced data, and return the consumer's state","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":249142,"byte_end":249223,"line_start":67,"line_end":67,"column_start":3,"column_end":84}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":249226,"byte_end":249229,"line_start":68,"line_end":68,"column_start":3,"column_end":6}},{"value":"/ a new producer has to implement this method.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":249232,"byte_end":249280,"line_start":69,"line_end":69,"column_start":3,"column_end":51}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":249283,"byte_end":249286,"line_start":70,"line_end":70,"column_start":3,"column_end":6}},{"value":"/ WARNING: if the `ConsumerState` generated by your consumer has a reference","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":249289,"byte_end":249367,"line_start":71,"line_end":71,"column_start":3,"column_end":81}},{"value":"/ to the input, it will generate borrow checking errors such as","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":249370,"byte_end":249435,"line_start":72,"line_end":72,"column_start":3,"column_end":68}},{"value":"/ `error: cannot borrow `producer` as mutable more than once at a time [E0499]`.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":249438,"byte_end":249520,"line_start":73,"line_end":73,"column_start":3,"column_end":85}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":249523,"byte_end":249526,"line_start":74,"line_end":74,"column_start":3,"column_end":6}},{"value":"/ It is caused by the producer's ability to refill the input at will, so it can modify","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":249529,"byte_end":249617,"line_start":75,"line_end":75,"column_start":3,"column_end":91}},{"value":"/ the input slice the `ConsumerState` is referring to.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":249620,"byte_end":249676,"line_start":76,"line_end":76,"column_start":3,"column_end":59}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":249679,"byte_end":249682,"line_start":77,"line_end":77,"column_start":3,"column_end":6}},{"value":"/ To avoid that kind of issue, try to do all the computations on input slices inside the","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":249685,"byte_end":249775,"line_start":78,"line_end":78,"column_start":3,"column_end":93}},{"value":"/ `Consumer` chain","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":249778,"byte_end":249798,"line_start":79,"line_end":79,"column_start":3,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":250005,"byte_end":250008,"line_start":83,"line_end":83,"column_start":6,"column_end":9},"name":"run","qualname":"::stream::Producer::run","value":"pub fn run<'a:'b, O, E: 'b>(&'b mut Self, &'a mut Consumer<I, O, E, M>)\n-> Option<&O>","parent":{"krate":0,"index":501},"children":[],"decl_id":null,"docs":" Applies a consumer once on the produced data, and returns the generated value if there is one\n","sig":null,"attributes":[{"value":"/ Applies a consumer once on the produced data, and returns the generated value if there is one","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":249902,"byte_end":249999,"line_start":82,"line_end":82,"column_start":3,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":513},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":250332,"byte_end":250346,"line_start":94,"line_end":94,"column_start":12,"column_end":26},"name":"ProducerRepeat","qualname":"::stream::ProducerRepeat","value":"ProducerRepeat {  }","parent":null,"children":[{"krate":0,"index":515}],"decl_id":null,"docs":" ProducerRepeat takes a single value, and generates it at each step\n","sig":null,"attributes":[{"value":"/ ProducerRepeat takes a single value, and generates it at each step","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":250250,"byte_end":250320,"line_start":93,"line_end":93,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":524},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":250998,"byte_end":251009,"line_start":119,"line_end":119,"column_start":12,"column_end":23},"name":"MemProducer","qualname":"::stream::MemProducer","value":"MemProducer {  }","parent":null,"children":[{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529}],"decl_id":null,"docs":" A MemProducer generates values from an in memory byte buffer","sig":null,"attributes":[{"value":"/ A MemProducer generates values from an in memory byte buffer","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":250766,"byte_end":250830,"line_start":115,"line_end":115,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":250831,"byte_end":250834,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ it generates data by chunks, and keeps track of how much was consumed.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":250835,"byte_end":250909,"line_start":117,"line_end":117,"column_start":1,"column_end":75}},{"value":"/ It can receive messages of type `Move` to handle consumption and seeking","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":250910,"byte_end":250986,"line_start":118,"line_end":118,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":251128,"byte_end":251131,"line_start":127,"line_end":127,"column_start":10,"column_end":13},"name":"new","qualname":"<MemProducer>::new","value":"pub fn new(&'x [u8], usize) -> MemProducer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1174},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":251425,"byte_end":251432,"line_start":140,"line_end":140,"column_start":3,"column_end":10},"name":"Consume","qualname":"::stream::Move::Consume","value":"Move::Consume(usize)","parent":{"krate":0,"index":1173},"children":[],"decl_id":null,"docs":" indcates how much data was consumed\n","sig":null,"attributes":[{"value":"/ indcates how much data was consumed","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":251383,"byte_end":251422,"line_start":139,"line_end":139,"column_start":3,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1177},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":251501,"byte_end":251505,"line_start":142,"line_end":142,"column_start":3,"column_end":7},"name":"Seek","qualname":"::stream::Move::Seek","value":"Move::Seek(SeekFrom)","parent":{"krate":0,"index":1173},"children":[],"decl_id":null,"docs":" indicates where in the input the consumer must seek\n","sig":null,"attributes":[{"value":"/ indicates where in the input the consumer must seek","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":251443,"byte_end":251498,"line_start":141,"line_end":141,"column_start":3,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1180},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":251555,"byte_end":251560,"line_start":144,"line_end":144,"column_start":3,"column_end":8},"name":"Await","qualname":"::stream::Move::Await","value":"Move::Await(Needed)","parent":{"krate":0,"index":1173},"children":[],"decl_id":null,"docs":" indicates more data is needed\n","sig":null,"attributes":[{"value":"/ indicates more data is needed","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":251519,"byte_end":251552,"line_start":143,"line_end":143,"column_start":3,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":1173},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":251374,"byte_end":251378,"line_start":138,"line_end":138,"column_start":10,"column_end":14},"name":"Move","qualname":"::stream::Move","value":"pub enum Move { Consume(usize), Seek(SeekFrom), Await(Needed), }","parent":null,"children":[{"krate":0,"index":1174},{"krate":0,"index":1177},{"krate":0,"index":1180}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1196},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":254156,"byte_end":254162,"line_start":226,"line_end":226,"column_start":3,"column_end":9},"name":"Normal","qualname":"::stream::FileProducerState::Normal","value":"FileProducerState::Normal","parent":{"krate":0,"index":1195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1198},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":254166,"byte_end":254171,"line_start":227,"line_end":227,"column_start":3,"column_end":8},"name":"Error","qualname":"::stream::FileProducerState::Error","value":"FileProducerState::Error","parent":{"krate":0,"index":1195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1200},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":254175,"byte_end":254178,"line_start":228,"line_end":228,"column_start":3,"column_end":6},"name":"Eof","qualname":"::stream::FileProducerState::Eof","value":"FileProducerState::Eof","parent":{"krate":0,"index":1195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1195},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":254134,"byte_end":254151,"line_start":225,"line_end":225,"column_start":10,"column_end":27},"name":"FileProducerState","qualname":"::stream::FileProducerState","value":"pub enum FileProducerState { Normal, Error, Eof, }","parent":null,"children":[{"krate":0,"index":1196},{"krate":0,"index":1198},{"krate":0,"index":1200}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1213},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":254210,"byte_end":254222,"line_start":232,"line_end":232,"column_start":12,"column_end":24},"name":"FileProducer","qualname":"::stream::FileProducer","value":"FileProducer {  }","parent":null,"children":[{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218},{"krate":0,"index":1219},{"krate":0,"index":1220}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":254403,"byte_end":254406,"line_start":243,"line_end":243,"column_start":10,"column_end":13},"name":"new","qualname":"<FileProducer>::new","value":"pub fn new(&str, usize) -> io::Result<FileProducer>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":254824,"byte_end":254829,"line_start":253,"line_end":253,"column_start":10,"column_end":15},"name":"state","qualname":"<FileProducer>::state","value":"pub fn state(&Self) -> FileProducerState","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":254955,"byte_end":254961,"line_start":258,"line_end":258,"column_start":10,"column_end":16},"name":"refill","qualname":"<FileProducer>::refill","value":"pub fn refill(&mut Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":255671,"byte_end":255677,"line_start":281,"line_end":281,"column_start":10,"column_end":16},"name":"resize","qualname":"<FileProducer>::resize","value":"pub fn resize(&mut Self, usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Resize the internal buffer, copy the data to the new one and returned how much data was copied","sig":null,"attributes":[{"value":"/ Resize the internal buffer, copy the data to the new one and returned how much data was copied","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":255453,"byte_end":255551,"line_start":278,"line_end":278,"column_start":3,"column_end":101}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":255554,"byte_end":255557,"line_start":279,"line_end":279,"column_start":3,"column_end":6}},{"value":"/ If the new buffer is smaller, the prefix will be copied, and the rest of the data will be dropped","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":255560,"byte_end":255661,"line_start":280,"line_end":280,"column_start":3,"column_end":104}}]},{"kind":"Function","id":{"krate":0,"index":550},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":256029,"byte_end":256034,"line_start":298,"line_end":298,"column_start":8,"column_end":13},"name":"shift","qualname":"::stream::shift","value":"pub fn shift(&mut [u8], usize, usize)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":560},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":258685,"byte_end":258696,"line_start":384,"line_end":384,"column_start":12,"column_end":23},"name":"MapConsumer","qualname":"::stream::MapConsumer","value":"MapConsumer {  }","parent":null,"children":[{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574}],"decl_id":null,"docs":" MapConsumer takes a function S -> T and applies it on a consumer producing values of type S\n","sig":null,"attributes":[{"value":"/ MapConsumer takes a function S -> T and applies it on a consumer producing values of type S","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":258578,"byte_end":258673,"line_start":383,"line_end":383,"column_start":1,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":259010,"byte_end":259013,"line_start":394,"line_end":394,"column_start":10,"column_end":13},"name":"new","qualname":"<MapConsumer>::new","value":"pub fn new(&'a mut C, F) -> MapConsumer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":596},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":260367,"byte_end":260380,"line_start":430,"line_end":430,"column_start":12,"column_end":25},"name":"ChainConsumer","qualname":"::stream::ChainConsumer","value":"ChainConsumer {  }","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610}],"decl_id":null,"docs":" ChainConsumer takes a consumer C1 R -> S, and a consumer C2 S -> T, and makes a consumer R -> T by applying C2 on C1's result\n","sig":null,"attributes":[{"value":"/ ChainConsumer takes a consumer C1 R -> S, and a consumer C2 S -> T, and makes a consumer R -> T by applying C2 on C1's result","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":260226,"byte_end":260355,"line_start":429,"line_end":429,"column_start":1,"column_end":130}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":260696,"byte_end":260699,"line_start":439,"line_end":439,"column_start":10,"column_end":13},"name":"new","qualname":"<ChainConsumer>::new","value":"pub fn new(&'a mut C1, &'b mut C2) -> ChainConsumer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":2,"kind":"Inherent","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":21687,"byte_end":21696,"line_start":708,"line_end":708,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":26501,"byte_end":26507,"line_start":36,"line_end":36,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":27503,"byte_end":27510,"line_start":65,"line_end":65,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":169},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":30298,"byte_end":30305,"line_start":164,"line_end":164,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":30487,"byte_end":30494,"line_start":173,"line_end":173,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":30670,"byte_end":30677,"line_start":182,"line_end":182,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":30868,"byte_end":30875,"line_start":191,"line_end":191,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":31051,"byte_end":31058,"line_start":200,"line_end":200,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":31226,"byte_end":31233,"line_start":209,"line_end":209,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":31607,"byte_end":31610,"line_start":225,"line_end":225,"column_start":48,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":31906,"byte_end":31909,"line_start":235,"line_end":235,"column_start":50,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":247660,"byte_end":247673,"line_start":33,"line_end":33,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":250414,"byte_end":250428,"line_start":98,"line_end":98,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":251101,"byte_end":251112,"line_start":126,"line_end":126,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":251614,"byte_end":251625,"line_start":147,"line_end":147,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":254379,"byte_end":254391,"line_start":242,"line_end":242,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":544},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":256278,"byte_end":256290,"line_start":308,"line_end":308,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":258969,"byte_end":258980,"line_start":393,"line_end":393,"column_start":71,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":259678,"byte_end":259689,"line_start":413,"line_end":413,"column_start":93,"column_end":104},"value":"","parent":null,"children":[{"krate":0,"index":594},{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":260648,"byte_end":260661,"line_start":438,"line_end":438,"column_start":90,"column_end":103},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":261586,"byte_end":261599,"line_start":460,"line_end":460,"column_start":112,"column_end":125},"value":"","parent":null,"children":[{"krate":0,"index":632},{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/util.rs","byte_start":21687,"byte_end":21696,"line_start":708,"line_end":708,"column_start":11,"column_end":20},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":876},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":26501,"byte_end":26507,"line_start":36,"line_end":36,"column_start":6,"column_end":12},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1052},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":27503,"byte_end":27510,"line_start":65,"line_end":65,"column_start":13,"column_end":20},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1070},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":30298,"byte_end":30305,"line_start":164,"line_end":164,"column_start":37,"column_end":44},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1070},"to":{"krate":0,"index":175}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":30487,"byte_end":30494,"line_start":173,"line_end":173,"column_start":28,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1070},"to":{"krate":0,"index":175}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":30670,"byte_end":30677,"line_start":182,"line_end":182,"column_start":36,"column_end":43},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1070},"to":{"krate":0,"index":175}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":30868,"byte_end":30875,"line_start":191,"line_end":191,"column_start":38,"column_end":45},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1070},"to":{"krate":0,"index":178}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":31051,"byte_end":31058,"line_start":200,"line_end":200,"column_start":29,"column_end":36},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1070},"to":{"krate":0,"index":178}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":31226,"byte_end":31233,"line_start":209,"line_end":209,"column_start":37,"column_end":44},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1070},"to":{"krate":0,"index":178}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":31607,"byte_end":31610,"line_start":225,"line_end":225,"column_start":48,"column_end":51},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1010},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/internal.rs","byte_start":31906,"byte_end":31909,"line_start":235,"line_end":235,"column_start":50,"column_end":53},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1010},"to":{"krate":2,"index":9602}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":247660,"byte_end":247673,"line_start":33,"line_end":33,"column_start":29,"column_end":42},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1149},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":250414,"byte_end":250428,"line_start":98,"line_end":98,"column_start":44,"column_end":58},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":513},"to":{"krate":0,"index":501}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":251101,"byte_end":251112,"line_start":126,"line_end":126,"column_start":10,"column_end":21},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":251614,"byte_end":251625,"line_start":147,"line_end":147,"column_start":43,"column_end":54},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":524},"to":{"krate":0,"index":501}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":254379,"byte_end":254391,"line_start":242,"line_end":242,"column_start":6,"column_end":18},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":256278,"byte_end":256290,"line_start":308,"line_end":308,"column_start":41,"column_end":53},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1213},"to":{"krate":0,"index":501}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":258969,"byte_end":258980,"line_start":393,"line_end":393,"column_start":71,"column_end":82},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":560},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":259678,"byte_end":259689,"line_start":413,"line_end":413,"column_start":93,"column_end":104},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":560},"to":{"krate":0,"index":494}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":260648,"byte_end":260661,"line_start":438,"line_end":438,"column_start":90,"column_end":103},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":596},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.4/src/stream.rs","byte_start":261586,"byte_end":261599,"line_start":460,"line_end":460,"column_start":112,"column_end":125},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":596},"to":{"krate":0,"index":494}}]}