{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0","program":"/home/laura-eliise/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","meval","/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=c0ac29ea8006545a","-C","extra-filename=-c0ac29ea8006545a","--out-dir","/home/laura-eliise/Desktop/01/piscine-rust/target/rls/debug/deps","-L","dependency=/home/laura-eliise/Desktop/01/piscine-rust/target/rls/debug/deps","--extern","fnv=/home/laura-eliise/Desktop/01/piscine-rust/target/rls/debug/deps/libfnv-c8d6ed4efd3bf5d7.rmeta","--extern","nom=/home/laura-eliise/Desktop/01/piscine-rust/target/rls/debug/deps/libnom-8bd211811a7b657e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/laura-eliise/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/laura-eliise/Desktop/01/piscine-rust/target/rls/debug/deps/libmeval-c0ac29ea8006545a.rmeta"},"prelude":{"crate_id":{"name":"meval","disambiguator":[13799355773179380611,0]},"crate_root":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src","external_crates":[{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14788966508543342302,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2825088610194081445,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9481142260376939403,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16420834686343379425,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11097033969885139948,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6800150773471260640,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9424233180753397496,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4493421558680613340,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[10587786945246582611,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6037489587312533517,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[12999623613951624675,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[15285592788019233460,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[7690318462147983057,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16937637772373355212,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[8216859446519220865,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[6387052066414425180,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[879344915155370202,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[12947071141408240460,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12545025351940724261,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","num":20,"id":{"name":"nom","disambiguator":[361394557975655870,0]}},{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","num":21,"id":{"name":"fnv","disambiguator":[2820629484274813865,0]}}],"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":0,"byte_end":8000,"line_start":1,"line_end":274,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":6114,"byte_end":6115,"line_start":208,"line_end":208,"column_start":15,"column_end":16},"alias_span":null,"name":"*","value":"FuncEvalError","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":413},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":6140,"byte_end":6148,"line_start":209,"line_end":209,"column_start":24,"column_end":32},"alias_span":null,"name":"RPNError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":440},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":6169,"byte_end":6179,"line_start":210,"line_end":210,"column_start":20,"column_end":30},"alias_span":null,"name":"ParseError","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":0,"byte_end":8000,"line_start":1,"line_end":274,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":219},{"krate":0,"index":239},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":314},{"krate":0,"index":605},{"krate":0,"index":619},{"krate":0,"index":621},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":317},{"krate":0,"index":319},{"krate":0,"index":321},{"krate":0,"index":323}],"decl_id":null,"docs":" This [Rust] crate provides a simple math expression parsing and evaluation. Its main goal is to\n be convenient to use, while allowing for some flexibility. Currently works only with `f64`\n types. A typical use case is the configuration of numerical computations in\n Rust, think initial data and boundary conditions, via config files or command line arguments.","sig":null,"attributes":[{"value":"/ This [Rust] crate provides a simple math expression parsing and evaluation. Its main goal is to","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":0,"byte_end":99,"line_start":1,"line_end":1,"column_start":1,"column_end":100}},{"value":"/ be convenient to use, while allowing for some flexibility. Currently works only with `f64`","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":100,"byte_end":194,"line_start":2,"line_end":2,"column_start":1,"column_end":95}},{"value":"/ types. A typical use case is the configuration of numerical computations in","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":195,"byte_end":274,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ Rust, think initial data and boundary conditions, via config files or command line arguments.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":275,"byte_end":372,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":373,"byte_end":376,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Documentation","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":377,"byte_end":396,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":397,"byte_end":400,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ - [Full API documentation](https://docs.rs/meval)","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":401,"byte_end":454,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":455,"byte_end":458,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Installation","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":459,"byte_end":477,"line_start":10,"line_end":10,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":478,"byte_end":481,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Simply add the corresponding entry to your `Cargo.toml` dependency list:","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":482,"byte_end":558,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":559,"byte_end":562,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":563,"byte_end":574,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":575,"byte_end":593,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ meval = \"0.2\"","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":594,"byte_end":611,"line_start":16,"line_end":16,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":612,"byte_end":619,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":620,"byte_end":623,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ and add this to your crate root:","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":624,"byte_end":660,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":661,"byte_end":664,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":665,"byte_end":676,"line_start":21,"line_end":21,"column_start":1,"column_end":12}},{"value":"/ extern crate meval;","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":677,"byte_end":700,"line_start":22,"line_end":22,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":701,"byte_end":708,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":709,"byte_end":712,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/  **Requires Rust 1.26.**","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":713,"byte_end":741,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":742,"byte_end":745,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Simple examples","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":746,"byte_end":767,"line_start":27,"line_end":27,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":768,"byte_end":771,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":772,"byte_end":783,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"/ extern crate meval;","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":784,"byte_end":807,"line_start":30,"line_end":30,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":808,"byte_end":811,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":812,"byte_end":827,"line_start":32,"line_end":32,"column_start":1,"column_end":16}},{"value":"/     let r = meval::eval_str(\"1 + 2\").unwrap();","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":828,"byte_end":878,"line_start":33,"line_end":33,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":879,"byte_end":882,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/     println!(\"1 + 2 = {}\", r);","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":883,"byte_end":917,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":918,"byte_end":923,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":924,"byte_end":931,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":932,"byte_end":935,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Need to define a Rust function from an expression? No problem, use [`Expr`][Expr]","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":936,"byte_end":1021,"line_start":39,"line_end":39,"column_start":1,"column_end":86}},{"value":"/ for this and more:","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":1022,"byte_end":1044,"line_start":40,"line_end":40,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":1045,"byte_end":1048,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":1049,"byte_end":1060,"line_start":42,"line_end":42,"column_start":1,"column_end":12}},{"value":"/ extern crate meval;","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":1061,"byte_end":1084,"line_start":43,"line_end":43,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":1085,"byte_end":1088,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":1089,"byte_end":1104,"line_start":45,"line_end":45,"column_start":1,"column_end":16}},{"value":"/     let expr: meval::Expr = \"sin(pi * x)\".parse().unwrap();","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":1105,"byte_end":1168,"line_start":46,"line_end":46,"column_start":1,"column_end":64}},{"value":"/     let func = expr.bind(\"x\").unwrap();","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":1169,"byte_end":1212,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":1213,"byte_end":1216,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     let vs: Vec<_> = (0..100+1).map(|i| func(i as f64 / 100.)).collect();","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":1217,"byte_end":1294,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":1295,"byte_end":1298,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     println!(\"sin(pi * x), 0 <= x <= 1: {:?}\", vs);","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":1299,"byte_end":1354,"line_start":51,"line_end":51,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":1355,"byte_end":1360,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":1361,"byte_end":1368,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":1369,"byte_end":1372,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ Custom constants and functions? Define a [`Context`][Context]!","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":1373,"byte_end":1439,"line_start":55,"line_end":55,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":1440,"byte_end":1443,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":1444,"byte_end":1455,"line_start":57,"line_end":57,"column_start":1,"column_end":12}},{"value":"/ use meval::{Expr, Context};","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":1456,"byte_end":1487,"line_start":58,"line_end":58,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":1488,"byte_end":1491,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let y = 1.;","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":1492,"byte_end":1507,"line_start":60,"line_end":60,"column_start":1,"column_end":16}},{"value":"/ let expr: Expr = \"phi(-2 * zeta + x)\".parse().unwrap();","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":1508,"byte_end":1567,"line_start":61,"line_end":61,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":1568,"byte_end":1571,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ // create a context with function definitions and variables","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":1572,"byte_end":1635,"line_start":63,"line_end":63,"column_start":1,"column_end":64}},{"value":"/ let mut ctx = Context::new(); // built-ins","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":1636,"byte_end":1682,"line_start":64,"line_end":64,"column_start":1,"column_end":47}},{"value":"/ ctx.func(\"phi\", |x| x + y)","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":1683,"byte_end":1713,"line_start":65,"line_end":65,"column_start":1,"column_end":31}},{"value":"/    .var(\"zeta\", -1.);","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":1714,"byte_end":1739,"line_start":66,"line_end":66,"column_start":1,"column_end":26}},{"value":"/ // bind function with a custom context","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":1740,"byte_end":1782,"line_start":67,"line_end":67,"column_start":1,"column_end":43}},{"value":"/ let func = expr.bind_with_context(ctx, \"x\").unwrap();","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":1783,"byte_end":1840,"line_start":68,"line_end":68,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(func(2.), -2. * -1. + 2. + 1.);","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":1841,"byte_end":1887,"line_start":69,"line_end":69,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":1888,"byte_end":1895,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":1896,"byte_end":1899,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ For functions of 2, 3, and N variables use `Context::func2`, `Context::func3` and","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":1900,"byte_end":1985,"line_start":72,"line_end":72,"column_start":1,"column_end":86}},{"value":"/ `Context::funcn`,","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":1986,"byte_end":2007,"line_start":73,"line_end":73,"column_start":1,"column_end":22}},{"value":"/ respectively. See [`Context`][Context] for more options.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":2008,"byte_end":2068,"line_start":74,"line_end":74,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":2069,"byte_end":2072,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ If you need a custom function depending on mutable parameters, you will need to use a","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":2073,"byte_end":2162,"line_start":76,"line_end":76,"column_start":1,"column_end":90}},{"value":"/ [`Cell`](https://doc.rust-lang.org/stable/std/cell/struct.Cell.html):","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":2163,"byte_end":2236,"line_start":77,"line_end":77,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":2237,"byte_end":2240,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":2241,"byte_end":2252,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/ use std::cell::Cell;","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":2253,"byte_end":2277,"line_start":80,"line_end":80,"column_start":1,"column_end":25}},{"value":"/ use meval::{Expr, Context};","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":2278,"byte_end":2309,"line_start":81,"line_end":81,"column_start":1,"column_end":32}},{"value":"/ let y = Cell::new(0.);","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":2310,"byte_end":2336,"line_start":82,"line_end":82,"column_start":1,"column_end":27}},{"value":"/ let expr: Expr = \"phi(x)\".parse().unwrap();","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":2337,"byte_end":2384,"line_start":83,"line_end":83,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":2385,"byte_end":2388,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ let mut ctx = Context::empty(); // no built-ins","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":2389,"byte_end":2440,"line_start":85,"line_end":85,"column_start":1,"column_end":52}},{"value":"/ ctx.func(\"phi\", |x| x + y.get());","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":2441,"byte_end":2478,"line_start":86,"line_end":86,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":2479,"byte_end":2482,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ let func = expr.bind_with_context(ctx, \"x\").unwrap();","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":2483,"byte_end":2540,"line_start":88,"line_end":88,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(func(2.), 2.);","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":2541,"byte_end":2570,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/ y.set(3.);","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":2571,"byte_end":2585,"line_start":90,"line_end":90,"column_start":1,"column_end":15}},{"value":"/ assert_eq!(func(2.), 5.);","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":2586,"byte_end":2615,"line_start":91,"line_end":91,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":2616,"byte_end":2623,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":2624,"byte_end":2627,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ # Supported expressions","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":2628,"byte_end":2655,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":2656,"byte_end":2659,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ `meval` supports basic mathematical operations on floating point numbers:","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":2660,"byte_end":2737,"line_start":96,"line_end":96,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":2738,"byte_end":2741,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ - binary operators: `+`, `-`, `*`, `/`, `%` (remainder), `^` (power)","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":2742,"byte_end":2814,"line_start":98,"line_end":98,"column_start":1,"column_end":73}},{"value":"/ - unary operators: `+`, `-`","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":2815,"byte_end":2846,"line_start":99,"line_end":99,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":2847,"byte_end":2850,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ It supports custom variables and functions like `x`, `weight`, `C_0`, `f(1)`, etc. A variable","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":2851,"byte_end":2948,"line_start":101,"line_end":101,"column_start":1,"column_end":98}},{"value":"/ or function name must start with `[a-zA-Z_]` and can contain only `[a-zA-Z0-9_]`. Custom","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":2949,"byte_end":3041,"line_start":102,"line_end":102,"column_start":1,"column_end":93}},{"value":"/ functions with a variable number of arguments are also supported.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":3042,"byte_end":3111,"line_start":103,"line_end":103,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":3112,"byte_end":3115,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ Build-ins (given by the context `Context::new()` and when no context provided) currently","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":3116,"byte_end":3208,"line_start":105,"line_end":105,"column_start":1,"column_end":93}},{"value":"/ supported:","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":3209,"byte_end":3223,"line_start":106,"line_end":106,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":3224,"byte_end":3227,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ - functions implemented using functions of the same name in [Rust std library][std-float]:","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":3228,"byte_end":3322,"line_start":108,"line_end":108,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":3323,"byte_end":3326,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/     - `sqrt`, `abs`","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":3327,"byte_end":3350,"line_start":110,"line_end":110,"column_start":1,"column_end":24}},{"value":"/     - `exp`, `ln`","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":3351,"byte_end":3372,"line_start":111,"line_end":111,"column_start":1,"column_end":22}},{"value":"/     - `sin`, `cos`, `tan`, `asin`, `acos`, `atan`, `atan2`","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":3373,"byte_end":3435,"line_start":112,"line_end":112,"column_start":1,"column_end":63}},{"value":"/     - `sinh`, `cosh`, `tanh`, `asinh`, `acosh`, `atanh`","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":3436,"byte_end":3495,"line_start":113,"line_end":113,"column_start":1,"column_end":60}},{"value":"/     - `floor`, `ceil`, `round`","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":3496,"byte_end":3530,"line_start":114,"line_end":114,"column_start":1,"column_end":35}},{"value":"/     - `signum`","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":3531,"byte_end":3549,"line_start":115,"line_end":115,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":3550,"byte_end":3553,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ - other functions:","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":3554,"byte_end":3576,"line_start":117,"line_end":117,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":3577,"byte_end":3580,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/     - `max(x, ...)`, `min(x, ...)`: maximum and minimumum of 1 or more numbers","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":3581,"byte_end":3663,"line_start":119,"line_end":119,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":3664,"byte_end":3667,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ - constants:","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":3668,"byte_end":3684,"line_start":121,"line_end":121,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":3685,"byte_end":3688,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/     - `pi`","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":3689,"byte_end":3703,"line_start":123,"line_end":123,"column_start":1,"column_end":15}},{"value":"/     - `e`","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":3704,"byte_end":3717,"line_start":124,"line_end":124,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":3718,"byte_end":3721,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ # Deserialization","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":3722,"byte_end":3743,"line_start":126,"line_end":126,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":3744,"byte_end":3747,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ [`Expr`][Expr] supports deserialization using the [serde] library to make flexible","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":3748,"byte_end":3834,"line_start":128,"line_end":128,"column_start":1,"column_end":87}},{"value":"/ configuration easy to set up, if the feature `serde` is enabled (disable by default).","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":3835,"byte_end":3924,"line_start":129,"line_end":129,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":3925,"byte_end":3928,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ #[macro_use]","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":4041,"byte_end":4057,"line_start":133,"line_end":133,"column_start":1,"column_end":17}},{"value":"/ extern crate serde_derive;","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":4058,"byte_end":4088,"line_start":134,"line_end":134,"column_start":1,"column_end":31}},{"value":"/ extern crate toml;","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":4089,"byte_end":4111,"line_start":135,"line_end":135,"column_start":1,"column_end":23}},{"value":"/ extern crate meval;","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":4112,"byte_end":4135,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"/ use meval::{Expr, Context};","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":4136,"byte_end":4167,"line_start":137,"line_end":137,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":4168,"byte_end":4171,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":4172,"byte_end":4198,"line_start":139,"line_end":139,"column_start":1,"column_end":27}},{"value":"/ struct Ode {","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":4199,"byte_end":4215,"line_start":140,"line_end":140,"column_start":1,"column_end":17}},{"value":"/     #[serde(deserialize_with = \"meval::de::as_f64\")]","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":4216,"byte_end":4272,"line_start":141,"line_end":141,"column_start":1,"column_end":57}},{"value":"/     x0: f64,","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":4273,"byte_end":4289,"line_start":142,"line_end":142,"column_start":1,"column_end":17}},{"value":"/     #[serde(deserialize_with = \"meval::de::as_f64\")]","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":4290,"byte_end":4346,"line_start":143,"line_end":143,"column_start":1,"column_end":57}},{"value":"/     t0: f64,","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":4347,"byte_end":4363,"line_start":144,"line_end":144,"column_start":1,"column_end":17}},{"value":"/     f: Expr,","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":4364,"byte_end":4380,"line_start":145,"line_end":145,"column_start":1,"column_end":17}},{"value":"/     g: Expr,","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":4381,"byte_end":4397,"line_start":146,"line_end":146,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":4398,"byte_end":4403,"line_start":147,"line_end":147,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":4404,"byte_end":4407,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":4408,"byte_end":4423,"line_start":149,"line_end":149,"column_start":1,"column_end":16}},{"value":"/     let config = r#\"","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":4424,"byte_end":4448,"line_start":150,"line_end":150,"column_start":1,"column_end":25}},{"value":"/         x0 = \"cos(1.)\"","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":4449,"byte_end":4475,"line_start":151,"line_end":151,"column_start":1,"column_end":27}},{"value":"/         t0 = 2","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":4476,"byte_end":4494,"line_start":152,"line_end":152,"column_start":1,"column_end":19}},{"value":"/         f = \"sin(x)\"","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":4495,"byte_end":4519,"line_start":153,"line_end":153,"column_start":1,"column_end":25}},{"value":"/         g = 2.5","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":4520,"byte_end":4539,"line_start":154,"line_end":154,"column_start":1,"column_end":20}},{"value":"/     \"#;","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":4540,"byte_end":4551,"line_start":155,"line_end":155,"column_start":1,"column_end":12}},{"value":"/     let ode: Ode = toml::from_str(config).unwrap();","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":4552,"byte_end":4607,"line_start":156,"line_end":156,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":4608,"byte_end":4611,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(ode.x0, 1f64.cos());","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":4612,"byte_end":4651,"line_start":158,"line_end":158,"column_start":1,"column_end":40}},{"value":"/     assert_eq!(ode.t0, 2f64);","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":4652,"byte_end":4685,"line_start":159,"line_end":159,"column_start":1,"column_end":34}},{"value":"/     assert_eq!(ode.f.bind(\"x\").unwrap()(2.), 2f64.sin());","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":4686,"byte_end":4747,"line_start":160,"line_end":160,"column_start":1,"column_end":62}},{"value":"/     assert_eq!(ode.g.eval().unwrap(), 2.5f64);","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":4748,"byte_end":4798,"line_start":161,"line_end":161,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":4799,"byte_end":4804,"line_start":162,"line_end":162,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":4805,"byte_end":4808,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":4809,"byte_end":4816,"line_start":164,"line_end":164,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":4817,"byte_end":4820,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ # Related projects","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":4821,"byte_end":4843,"line_start":166,"line_end":166,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":4844,"byte_end":4847,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ This is a toy project of mine for learning Rust, and to be hopefully useful when writing","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":4848,"byte_end":4940,"line_start":168,"line_end":168,"column_start":1,"column_end":93}},{"value":"/ command line scripts. There is no plan to make this anything more than _math expression ->","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":4941,"byte_end":5035,"line_start":169,"line_end":169,"column_start":1,"column_end":95}},{"value":"/ number_ \"converter\". For more advanced scripting, see:","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":5036,"byte_end":5094,"line_start":170,"line_end":170,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":5095,"byte_end":5098,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ - [dyon] -- A rusty dynamically typed scripting language","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":5099,"byte_end":5159,"line_start":172,"line_end":172,"column_start":1,"column_end":61}},{"value":"/ - [gluon] -- A static, type inferred programming language for application embedding","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":5160,"byte_end":5247,"line_start":173,"line_end":173,"column_start":1,"column_end":88}},{"value":"/ - [rodolf0/tox](https://github.com/rodolf0/tox) -- another shunting yard expression parser","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":5248,"byte_end":5342,"line_start":174,"line_end":174,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":5343,"byte_end":5346,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ [Rust]: https://www.rust-lang.org/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":5347,"byte_end":5385,"line_start":176,"line_end":176,"column_start":1,"column_end":39}},{"value":"/ [std-float]: http://doc.rust-lang.org/stable/std/primitive.f64.html","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":5386,"byte_end":5457,"line_start":177,"line_end":177,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":5458,"byte_end":5461,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ [Expr]: struct.Expr.html","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":5462,"byte_end":5490,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/ [Expr::bind]: struct.Expr.html#method.bind","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":5491,"byte_end":5537,"line_start":180,"line_end":180,"column_start":1,"column_end":47}},{"value":"/ [Context]: struct.Context.html","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":5538,"byte_end":5572,"line_start":181,"line_end":181,"column_start":1,"column_end":35}},{"value":"/ [serde]: https://crates.io/crates/serde","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":5573,"byte_end":5616,"line_start":182,"line_end":182,"column_start":1,"column_end":44}},{"value":"/ [dyon]: https://crates.io/crates/dyon","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":5617,"byte_end":5658,"line_start":183,"line_end":183,"column_start":1,"column_end":42}},{"value":"/ [gluon]: https://crates.io/crates/gluon","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":5659,"byte_end":5702,"line_start":184,"line_end":184,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":326},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":8867,"byte_end":8871,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"Expr","qualname":"::expr::Expr","value":"Expr {  }","parent":null,"children":[{"krate":0,"index":327}],"decl_id":null,"docs":" Representation of a parsed expression.","sig":null,"attributes":[{"value":"/ Representation of a parsed expression.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":8250,"byte_end":8292,"line_start":15,"line_end":15,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":8293,"byte_end":8296,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The expression is internally stored in the [reverse Polish notation (RPN)][RPN] as a sequence","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":8297,"byte_end":8394,"line_start":17,"line_end":17,"column_start":1,"column_end":98}},{"value":"/ of `Token`s.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":8395,"byte_end":8411,"line_start":18,"line_end":18,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":8412,"byte_end":8415,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Methods `bind`, `bind_with_context`, `bind2`, ... can be used to create  closures from","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":8416,"byte_end":8506,"line_start":20,"line_end":20,"column_start":1,"column_end":91}},{"value":"/ the expression that then can be passed around and used as any other `Fn` closures.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":8507,"byte_end":8593,"line_start":21,"line_end":21,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":8594,"byte_end":8597,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":8598,"byte_end":8609,"line_start":23,"line_end":23,"column_start":1,"column_end":12}},{"value":"/ let func = \"x^2\".parse::<meval::Expr>().unwrap().bind(\"x\").unwrap();","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":8610,"byte_end":8682,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/ let r = Some(2.).map(func);","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":8683,"byte_end":8714,"line_start":25,"line_end":25,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(r, Some(4.));","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":8715,"byte_end":8743,"line_start":26,"line_end":26,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":8744,"byte_end":8751,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":8752,"byte_end":8755,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [RPN]: https://en.wikipedia.org/wiki/Reverse_Polish_notation","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":8756,"byte_end":8820,"line_start":29,"line_end":29,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":8955,"byte_end":8959,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"eval","qualname":"<Expr>::eval","value":"pub fn eval(&Self) -> Result<f64, Error>","parent":null,"children":[],"decl_id":null,"docs":" Evaluates the expression.\n","sig":null,"attributes":[{"value":"/ Evaluates the expression.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":8914,"byte_end":8943,"line_start":36,"line_end":36,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":9122,"byte_end":9139,"line_start":42,"line_end":42,"column_start":12,"column_end":29},"name":"eval_with_context","qualname":"<Expr>::eval_with_context","value":"pub fn eval_with_context<C: ContextProvider>(&Self, C) -> Result<f64, Error>","parent":null,"children":[],"decl_id":null,"docs":" Evaluates the expression with variables given by the argument.\n","sig":null,"attributes":[{"value":"/ Evaluates the expression with variables given by the argument.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":9044,"byte_end":9110,"line_start":41,"line_end":41,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":11924,"byte_end":11928,"line_start":116,"line_end":116,"column_start":12,"column_end":16},"name":"bind","qualname":"<Expr>::bind","value":"pub fn bind<'a>(Self, &str) -> Result</*impl Trait*/, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a function of one variable based on this expression, with default constants and\n functions.","sig":null,"attributes":[{"value":"/ Creates a function of one variable based on this expression, with default constants and","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":11577,"byte_end":11668,"line_start":107,"line_end":107,"column_start":5,"column_end":96}},{"value":"/ functions.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":11673,"byte_end":11687,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":11692,"byte_end":11695,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Binds the input of the returned closure to `var`.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":11700,"byte_end":11753,"line_start":110,"line_end":110,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":11758,"byte_end":11761,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":11766,"byte_end":11779,"line_start":112,"line_end":112,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":11784,"byte_end":11787,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if there is a variable in the expression that is not provided by the default","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":11792,"byte_end":11886,"line_start":114,"line_end":114,"column_start":5,"column_end":99}},{"value":"/ context or `var`.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":11891,"byte_end":11912,"line_start":115,"line_end":115,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":12340,"byte_end":12357,"line_start":128,"line_end":128,"column_start":12,"column_end":29},"name":"bind_with_context","qualname":"<Expr>::bind_with_context","value":"pub fn bind_with_context<'a, C>(Self, C, &str)\n-> Result</*impl Trait*/, Error> where C: ContextProvider + 'a","parent":null,"children":[],"decl_id":null,"docs":" Creates a function of one variable based on this expression.","sig":null,"attributes":[{"value":"/ Creates a function of one variable based on this expression.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":12053,"byte_end":12117,"line_start":120,"line_end":120,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":12122,"byte_end":12125,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Binds the input of the returned closure to `var`.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":12130,"byte_end":12183,"line_start":122,"line_end":122,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":12188,"byte_end":12191,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":12196,"byte_end":12209,"line_start":124,"line_end":124,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":12214,"byte_end":12217,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if there is a variable in the expression that is not provided by `ctx` or","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":12222,"byte_end":12313,"line_start":126,"line_end":126,"column_start":5,"column_end":96}},{"value":"/ `var`.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":12318,"byte_end":12328,"line_start":127,"line_end":127,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":13097,"byte_end":13102,"line_start":153,"line_end":153,"column_start":12,"column_end":17},"name":"bind2","qualname":"<Expr>::bind2","value":"pub fn bind2<'a>(Self, &str, &str) -> Result</*impl Trait*/, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a function of two variables based on this expression, with default constants and\n functions.","sig":null,"attributes":[{"value":"/ Creates a function of two variables based on this expression, with default constants and","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":12736,"byte_end":12828,"line_start":144,"line_end":144,"column_start":5,"column_end":97}},{"value":"/ functions.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":12833,"byte_end":12847,"line_start":145,"line_end":145,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":12852,"byte_end":12855,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Binds the inputs of the returned closure to `var1` and `var2`.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":12860,"byte_end":12926,"line_start":147,"line_end":147,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":12931,"byte_end":12934,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":12939,"byte_end":12952,"line_start":149,"line_end":149,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":12957,"byte_end":12960,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if there is a variable in the expression that is not provided by the default","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":12965,"byte_end":13059,"line_start":151,"line_end":151,"column_start":5,"column_end":99}},{"value":"/ context or `var`.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":13064,"byte_end":13085,"line_start":152,"line_end":152,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":13554,"byte_end":13572,"line_start":165,"line_end":165,"column_start":12,"column_end":30},"name":"bind2_with_context","qualname":"<Expr>::bind2_with_context","value":"pub fn bind2_with_context<'a, C>(Self, C, &str, &str)\n-> Result</*impl Trait*/, Error> where C: ContextProvider + 'a","parent":null,"children":[],"decl_id":null,"docs":" Creates a function of two variables based on this expression.","sig":null,"attributes":[{"value":"/ Creates a function of two variables based on this expression.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":13253,"byte_end":13318,"line_start":157,"line_end":157,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":13323,"byte_end":13326,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ Binds the inputs of the returned closure to `var1` and `var2`.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":13331,"byte_end":13397,"line_start":159,"line_end":159,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":13402,"byte_end":13405,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":13410,"byte_end":13423,"line_start":161,"line_end":161,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":13428,"byte_end":13431,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if there is a variable in the expression that is not provided by `ctx` or","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":13436,"byte_end":13527,"line_start":163,"line_end":163,"column_start":5,"column_end":96}},{"value":"/ `var`.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":13532,"byte_end":13542,"line_start":164,"line_end":164,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":14420,"byte_end":14425,"line_start":192,"line_end":192,"column_start":12,"column_end":17},"name":"bind3","qualname":"<Expr>::bind3","value":"pub fn bind3<'a>(Self, &str, &str, &str) -> Result</*impl Trait*/, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a function of three variables based on this expression, with default constants and\n functions.","sig":null,"attributes":[{"value":"/ Creates a function of three variables based on this expression, with default constants and","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":14049,"byte_end":14143,"line_start":183,"line_end":183,"column_start":5,"column_end":99}},{"value":"/ functions.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":14148,"byte_end":14162,"line_start":184,"line_end":184,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":14167,"byte_end":14170,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ Binds the inputs of the returned closure to `var1`, `var2` and `var3`.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":14175,"byte_end":14249,"line_start":186,"line_end":186,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":14254,"byte_end":14257,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":14262,"byte_end":14275,"line_start":188,"line_end":188,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":14280,"byte_end":14283,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if there is a variable in the expression that is not provided by the default","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":14288,"byte_end":14382,"line_start":190,"line_end":190,"column_start":5,"column_end":99}},{"value":"/ context or `var`.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":14387,"byte_end":14408,"line_start":191,"line_end":191,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":14949,"byte_end":14967,"line_start":209,"line_end":209,"column_start":12,"column_end":30},"name":"bind3_with_context","qualname":"<Expr>::bind3_with_context","value":"pub fn bind3_with_context<'a, C>(Self, C, &str, &str, &str)\n-> Result</*impl Trait*/, Error> where C: ContextProvider + 'a","parent":null,"children":[],"decl_id":null,"docs":" Creates a function of three variables based on this expression.","sig":null,"attributes":[{"value":"/ Creates a function of three variables based on this expression.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":14638,"byte_end":14705,"line_start":201,"line_end":201,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":14710,"byte_end":14713,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ Binds the inputs of the returned closure to `var1`, `var2` and `var3`.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":14718,"byte_end":14792,"line_start":203,"line_end":203,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":14797,"byte_end":14800,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":14805,"byte_end":14818,"line_start":205,"line_end":205,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":14823,"byte_end":14826,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if there is a variable in the expression that is not provided by `ctx` or","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":14831,"byte_end":14922,"line_start":207,"line_end":207,"column_start":5,"column_end":96}},{"value":"/ `var`.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":14927,"byte_end":14937,"line_start":208,"line_end":208,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":15910,"byte_end":15915,"line_start":238,"line_end":238,"column_start":12,"column_end":17},"name":"bind4","qualname":"<Expr>::bind4","value":"pub fn bind4<'a>(Self, &str, &str, &str, &str)\n-> Result</*impl Trait*/, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a function of four variables based on this expression, with default constants and\n functions.","sig":null,"attributes":[{"value":"/ Creates a function of four variables based on this expression, with default constants and","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":15532,"byte_end":15625,"line_start":229,"line_end":229,"column_start":5,"column_end":98}},{"value":"/ functions.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":15630,"byte_end":15644,"line_start":230,"line_end":230,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":15649,"byte_end":15652,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Binds the inputs of the returned closure to `var1`, `var2`, `var3` and `var4`.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":15657,"byte_end":15739,"line_start":232,"line_end":232,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":15744,"byte_end":15747,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":15752,"byte_end":15765,"line_start":234,"line_end":234,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":15770,"byte_end":15773,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if there is a variable in the expression that is not provided by the default","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":15778,"byte_end":15872,"line_start":236,"line_end":236,"column_start":5,"column_end":99}},{"value":"/ context or `var`.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":15877,"byte_end":15898,"line_start":237,"line_end":237,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":16477,"byte_end":16495,"line_start":256,"line_end":256,"column_start":12,"column_end":30},"name":"bind4_with_context","qualname":"<Expr>::bind4_with_context","value":"pub fn bind4_with_context<'a, C>(Self, C, &str, &str, &str, &str)\n-> Result</*impl Trait*/, Error> where C: ContextProvider + 'a","parent":null,"children":[],"decl_id":null,"docs":" Creates a function of four variables based on this expression.","sig":null,"attributes":[{"value":"/ Creates a function of four variables based on this expression.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":16159,"byte_end":16225,"line_start":248,"line_end":248,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":16230,"byte_end":16233,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Binds the inputs of the returned closure to `var1`, `var2`, `var3` and `var4`.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":16238,"byte_end":16320,"line_start":250,"line_end":250,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":16325,"byte_end":16328,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":16333,"byte_end":16346,"line_start":252,"line_end":252,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":16351,"byte_end":16354,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if there is a variable in the expression that is not provided by `ctx` or","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":16359,"byte_end":16450,"line_start":254,"line_end":254,"column_start":5,"column_end":96}},{"value":"/ `var`.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":16455,"byte_end":16465,"line_start":255,"line_end":255,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":17542,"byte_end":17547,"line_start":287,"line_end":287,"column_start":12,"column_end":17},"name":"bind5","qualname":"<Expr>::bind5","value":"pub fn bind5<'a>(Self, &str, &str, &str, &str, &str)\n-> Result</*impl Trait*/, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a function of five variables based on this expression, with default constants and\n functions.","sig":null,"attributes":[{"value":"/ Creates a function of five variables based on this expression, with default constants and","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":17156,"byte_end":17249,"line_start":278,"line_end":278,"column_start":5,"column_end":98}},{"value":"/ functions.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":17254,"byte_end":17268,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":17273,"byte_end":17276,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Binds the inputs of the returned closure to `var1`, `var2`, `var3`, `var4` and `var5`.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":17281,"byte_end":17371,"line_start":281,"line_end":281,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":17376,"byte_end":17379,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":17384,"byte_end":17397,"line_start":283,"line_end":283,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":17402,"byte_end":17405,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if there is a variable in the expression that is not provided by the default","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":17410,"byte_end":17504,"line_start":285,"line_end":285,"column_start":5,"column_end":99}},{"value":"/ context or `var`.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":17509,"byte_end":17530,"line_start":286,"line_end":286,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":18148,"byte_end":18166,"line_start":306,"line_end":306,"column_start":12,"column_end":30},"name":"bind5_with_context","qualname":"<Expr>::bind5_with_context","value":"pub fn bind5_with_context<'a, C>(Self, C, &str, &str, &str, &str, &str)\n-> Result</*impl Trait*/, Error> where C: ContextProvider + 'a","parent":null,"children":[],"decl_id":null,"docs":" Creates a function of five variables based on this expression.","sig":null,"attributes":[{"value":"/ Creates a function of five variables based on this expression.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":17822,"byte_end":17888,"line_start":298,"line_end":298,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":17893,"byte_end":17896,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ Binds the inputs of the returned closure to `var1`, `var2`, `var3`, `var4` and `var5`.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":17901,"byte_end":17991,"line_start":300,"line_end":300,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":17996,"byte_end":17999,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":18004,"byte_end":18017,"line_start":302,"line_end":302,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":18022,"byte_end":18025,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if there is a variable in the expression that is not provided by `ctx` or","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":18030,"byte_end":18121,"line_start":304,"line_end":304,"column_start":5,"column_end":96}},{"value":"/ `var`.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":18126,"byte_end":18136,"line_start":305,"line_end":305,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":19337,"byte_end":19342,"line_start":347,"line_end":347,"column_start":12,"column_end":17},"name":"bindn","qualname":"<Expr>::bindn","value":"pub fn bindn<'a>(Self, &'a [&str]) -> Result</*impl Trait*/, Error>","parent":null,"children":[],"decl_id":null,"docs":" Binds the input of the returned closure to elements of `vars`.","sig":null,"attributes":[{"value":"/ Binds the input of the returned closure to elements of `vars`.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":19100,"byte_end":19166,"line_start":341,"line_end":341,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":19171,"byte_end":19174,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":19179,"byte_end":19192,"line_start":343,"line_end":343,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":19197,"byte_end":19200,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if there is a variable in the expression that is not provided by the default","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":19205,"byte_end":19299,"line_start":345,"line_end":345,"column_start":5,"column_end":99}},{"value":"/ context or `var`.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":19304,"byte_end":19325,"line_start":346,"line_end":346,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":19782,"byte_end":19800,"line_start":359,"line_end":359,"column_start":12,"column_end":30},"name":"bindn_with_context","qualname":"<Expr>::bindn_with_context","value":"pub fn bindn_with_context<'a, C>(Self, C, &'a [&str])\n-> Result</*impl Trait*/, Error> where C: ContextProvider + 'a","parent":null,"children":[],"decl_id":null,"docs":" Creates a function of N variables based on this expression.","sig":null,"attributes":[{"value":"/ Creates a function of N variables based on this expression.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":19479,"byte_end":19542,"line_start":351,"line_end":351,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":19547,"byte_end":19550,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Binds the input of the returned closure to the elements of `vars`.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":19555,"byte_end":19625,"line_start":353,"line_end":353,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":19630,"byte_end":19633,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":19638,"byte_end":19651,"line_start":355,"line_end":355,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":19656,"byte_end":19659,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if there is a variable in the expression that is not provided by `ctx` or","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":19664,"byte_end":19755,"line_start":357,"line_end":357,"column_start":5,"column_end":96}},{"value":"/ `var`.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":19760,"byte_end":19770,"line_start":358,"line_end":358,"column_start":5,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":104},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":21843,"byte_end":21851,"line_start":423,"line_end":423,"column_start":8,"column_end":16},"name":"eval_str","qualname":"::expr::eval_str","value":"pub fn eval_str<S: AsRef<str>>(S) -> Result<f64, Error>","parent":null,"children":[],"decl_id":null,"docs":" Evaluates a string with built-in constants and functions.\n","sig":null,"attributes":[{"value":"/ Evaluates a string with built-in constants and functions.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":21774,"byte_end":21835,"line_start":422,"line_end":422,"column_start":1,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":109},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":22371,"byte_end":22392,"line_start":444,"line_end":444,"column_start":8,"column_end":29},"name":"eval_str_with_context","qualname":"::expr::eval_str_with_context","value":"pub fn eval_str_with_context<S: AsRef<str>, C: ContextProvider>(S, C)\n-> Result<f64, Error>","parent":null,"children":[],"decl_id":null,"docs":" Evaluates a string with the given context.","sig":null,"attributes":[{"value":"/ Evaluates a string with the given context.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":22270,"byte_end":22316,"line_start":441,"line_end":441,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":22317,"byte_end":22320,"line_start":442,"line_end":442,"column_start":1,"column_end":4}},{"value":"/ No built-ins are defined in this case.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":22321,"byte_end":22363,"line_start":443,"line_end":443,"column_start":1,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":115},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":24545,"byte_end":24560,"line_start":517,"line_end":517,"column_start":11,"column_end":26},"name":"ContextProvider","qualname":"::expr::ContextProvider","value":"ContextProvider","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117}],"decl_id":null,"docs":" A trait of a source of variables (and constants) and functions for substitution into an\n evaluated expression.","sig":null,"attributes":[{"value":"/ A trait of a source of variables (and constants) and functions for substitution into an","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":22679,"byte_end":22770,"line_start":461,"line_end":461,"column_start":1,"column_end":92}},{"value":"/ evaluated expression.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":22771,"byte_end":22796,"line_start":462,"line_end":462,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":22797,"byte_end":22800,"line_start":463,"line_end":463,"column_start":1,"column_end":4}},{"value":"/ A simplest way to create a custom context provider is to use [`Context`](struct.Context.html).","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":22801,"byte_end":22899,"line_start":464,"line_end":464,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":22900,"byte_end":22903,"line_start":465,"line_end":465,"column_start":1,"column_end":4}},{"value":"/ ## Advanced usage","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":22904,"byte_end":22925,"line_start":466,"line_end":466,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":22926,"byte_end":22929,"line_start":467,"line_end":467,"column_start":1,"column_end":4}},{"value":"/ Alternatively, values of variables/constants can be specified by tuples `(name, value)`,","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":22930,"byte_end":23022,"line_start":468,"line_end":468,"column_start":1,"column_end":93}},{"value":"/ `std::collections::HashMap` or `std::collections::BTreeMap`.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":23023,"byte_end":23087,"line_start":469,"line_end":469,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":23088,"byte_end":23091,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":23092,"byte_end":23103,"line_start":471,"line_end":471,"column_start":1,"column_end":12}},{"value":"/ use meval::{ContextProvider, Context};","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":23104,"byte_end":23146,"line_start":472,"line_end":472,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":23147,"byte_end":23150,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ let mut ctx = Context::new(); // built-ins","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":23151,"byte_end":23197,"line_start":474,"line_end":474,"column_start":1,"column_end":47}},{"value":"/ ctx.var(\"x\", 2.); // insert a new variable","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":23198,"byte_end":23244,"line_start":475,"line_end":475,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(ctx.get_var(\"pi\"), Some(std::f64::consts::PI));","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":23245,"byte_end":23307,"line_start":476,"line_end":476,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":23308,"byte_end":23311,"line_start":477,"line_end":477,"column_start":1,"column_end":4}},{"value":"/ let myvars = (\"x\", 2.); // tuple as a ContextProvider","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":23312,"byte_end":23369,"line_start":478,"line_end":478,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(myvars.get_var(\"x\"), Some(2f64));","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":23370,"byte_end":23418,"line_start":479,"line_end":479,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":23419,"byte_end":23422,"line_start":480,"line_end":480,"column_start":1,"column_end":4}},{"value":"/ // HashMap as a ContextProvider","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":23423,"byte_end":23458,"line_start":481,"line_end":481,"column_start":1,"column_end":36}},{"value":"/ let mut varmap = std::collections::HashMap::new();","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":23459,"byte_end":23513,"line_start":482,"line_end":482,"column_start":1,"column_end":55}},{"value":"/ varmap.insert(\"x\", 2.);","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":23514,"byte_end":23541,"line_start":483,"line_end":483,"column_start":1,"column_end":28}},{"value":"/ varmap.insert(\"y\", 3.);","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":23542,"byte_end":23569,"line_start":484,"line_end":484,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(varmap.get_var(\"x\"), Some(2f64));","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":23570,"byte_end":23618,"line_start":485,"line_end":485,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(varmap.get_var(\"z\"), None);","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":23619,"byte_end":23661,"line_start":486,"line_end":486,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":23662,"byte_end":23669,"line_start":487,"line_end":487,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":23670,"byte_end":23673,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/ Custom functions can be also defined.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":23674,"byte_end":23715,"line_start":489,"line_end":489,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":23716,"byte_end":23719,"line_start":490,"line_end":490,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":23720,"byte_end":23731,"line_start":491,"line_end":491,"column_start":1,"column_end":12}},{"value":"/ use meval::{ContextProvider, Context};","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":23732,"byte_end":23774,"line_start":492,"line_end":492,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":23775,"byte_end":23778,"line_start":493,"line_end":493,"column_start":1,"column_end":4}},{"value":"/ let mut ctx = Context::new(); // built-ins","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":23779,"byte_end":23825,"line_start":494,"line_end":494,"column_start":1,"column_end":47}},{"value":"/ ctx.func2(\"phi\", |x, y| x / (y * y));","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":23826,"byte_end":23867,"line_start":495,"line_end":495,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":23868,"byte_end":23871,"line_start":496,"line_end":496,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(ctx.eval_func(\"phi\", &[2., 3.]), Ok(2. / (3. * 3.)));","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":23872,"byte_end":23940,"line_start":497,"line_end":497,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":23941,"byte_end":23948,"line_start":498,"line_end":498,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":23949,"byte_end":23952,"line_start":499,"line_end":499,"column_start":1,"column_end":4}},{"value":"/ A `ContextProvider` can be built by combining other contexts:","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":23953,"byte_end":24018,"line_start":500,"line_end":500,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":24019,"byte_end":24022,"line_start":501,"line_end":501,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":24023,"byte_end":24034,"line_start":502,"line_end":502,"column_start":1,"column_end":12}},{"value":"/ use meval::Context;","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":24035,"byte_end":24058,"line_start":503,"line_end":503,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":24059,"byte_end":24062,"line_start":504,"line_end":504,"column_start":1,"column_end":4}},{"value":"/ let bins = Context::new(); // built-ins","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":24063,"byte_end":24106,"line_start":505,"line_end":505,"column_start":1,"column_end":44}},{"value":"/ let mut funcs = Context::empty(); // empty context","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":24107,"byte_end":24161,"line_start":506,"line_end":506,"column_start":1,"column_end":55}},{"value":"/ funcs.func2(\"phi\", |x, y| x / (y * y));","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":24162,"byte_end":24205,"line_start":507,"line_end":507,"column_start":1,"column_end":44}},{"value":"/ let myvars = (\"x\", 2.);","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":24206,"byte_end":24233,"line_start":508,"line_end":508,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":24234,"byte_end":24237,"line_start":509,"line_end":509,"column_start":1,"column_end":4}},{"value":"/ // contexts can be combined using tuples","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":24238,"byte_end":24282,"line_start":510,"line_end":510,"column_start":1,"column_end":45}},{"value":"/ let ctx = ((myvars, bins), funcs); // first context has preference if there's duplicity","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":24283,"byte_end":24374,"line_start":511,"line_end":511,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":24375,"byte_end":24378,"line_start":512,"line_end":512,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(meval::eval_str_with_context(\"x * pi + phi(1., 2.)\", ctx).unwrap(), 2. *","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":24379,"byte_end":24466,"line_start":513,"line_end":513,"column_start":1,"column_end":88}},{"value":"/             std::f64::consts::PI + 1. / (2. * 2.));","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":24467,"byte_end":24522,"line_start":514,"line_end":514,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":24523,"byte_end":24530,"line_start":515,"line_end":515,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":24531,"byte_end":24534,"line_start":516,"line_end":516,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":24570,"byte_end":24577,"line_start":518,"line_end":518,"column_start":8,"column_end":15},"name":"get_var","qualname":"::expr::ContextProvider::get_var","value":"pub fn get_var(&Self, &str) -> Option<f64>","parent":{"krate":0,"index":115},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":24637,"byte_end":24646,"line_start":521,"line_end":521,"column_start":8,"column_end":17},"name":"eval_func","qualname":"::expr::ContextProvider::eval_func","value":"pub fn eval_func(&Self, &str, &[f64]) -> Result<f64, FuncEvalError>","parent":{"krate":0,"index":115},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":337},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":24854,"byte_end":24869,"line_start":529,"line_end":529,"column_start":5,"column_end":20},"name":"TooFewArguments","qualname":"::expr::FuncEvalError::TooFewArguments","value":"FuncEvalError::TooFewArguments","parent":{"krate":0,"index":336},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":339},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":24875,"byte_end":24891,"line_start":530,"line_end":530,"column_start":5,"column_end":21},"name":"TooManyArguments","qualname":"::expr::FuncEvalError::TooManyArguments","value":"FuncEvalError::TooManyArguments","parent":{"krate":0,"index":336},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":341},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":24897,"byte_end":24907,"line_start":531,"line_end":531,"column_start":5,"column_end":15},"name":"NumberArgs","qualname":"::expr::FuncEvalError::NumberArgs","value":"FuncEvalError::NumberArgs(usize)","parent":{"krate":0,"index":336},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":344},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":24920,"byte_end":24935,"line_start":532,"line_end":532,"column_start":5,"column_end":20},"name":"UnknownFunction","qualname":"::expr::FuncEvalError::UnknownFunction","value":"FuncEvalError::UnknownFunction","parent":{"krate":0,"index":336},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":336},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":24834,"byte_end":24847,"line_start":528,"line_end":528,"column_start":10,"column_end":23},"name":"FuncEvalError","qualname":"::expr::FuncEvalError","value":"pub enum FuncEvalError {\n    TooFewArguments,\n    TooManyArguments,\n    NumberArgs(usize),\n    UnknownFunction,\n}","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":339},{"krate":0,"index":341},{"krate":0,"index":344}],"decl_id":null,"docs":" Function evaluation error.\n","sig":null,"attributes":[{"value":"/ Function evaluation error.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":24759,"byte_end":24789,"line_start":526,"line_end":526,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":122},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":25840,"byte_end":25849,"line_start":558,"line_end":558,"column_start":8,"column_end":17},"name":"max_array","qualname":"::expr::max_array","value":"pub fn max_array(&[f64]) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":124},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":25959,"byte_end":25968,"line_start":563,"line_end":563,"column_start":8,"column_end":17},"name":"min_array","qualname":"::expr::min_array","value":"pub fn min_array(&[f64]) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":126},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":26174,"byte_end":26181,"line_start":569,"line_end":569,"column_start":8,"column_end":15},"name":"builtin","qualname":"::expr::builtin","value":"pub fn builtin<'a>() -> Context","parent":null,"children":[],"decl_id":null,"docs":" Returns the built-in constants and functions in a form that can be used as a `ContextProvider`.\n","sig":null,"attributes":[{"value":"/ Returns the built-in constants and functions in a form that can be used as a `ContextProvider`.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":26052,"byte_end":26151,"line_start":567,"line_end":567,"column_start":1,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":390},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":29329,"byte_end":29336,"line_start":685,"line_end":685,"column_start":12,"column_end":19},"name":"Context","qualname":"::expr::Context","value":"Context {  }","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":393}],"decl_id":null,"docs":" A structure for storing variables/constants and functions to be used in an expression.","sig":null,"attributes":[{"value":"/ A structure for storing variables/constants and functions to be used in an expression.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":28833,"byte_end":28923,"line_start":669,"line_end":669,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":28924,"byte_end":28927,"line_start":670,"line_end":670,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":28928,"byte_end":28941,"line_start":671,"line_end":671,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":28942,"byte_end":28945,"line_start":672,"line_end":672,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":28946,"byte_end":28957,"line_start":673,"line_end":673,"column_start":1,"column_end":12}},{"value":"/ use meval::{eval_str_with_context, Context};","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":28958,"byte_end":29006,"line_start":674,"line_end":674,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":29007,"byte_end":29010,"line_start":675,"line_end":675,"column_start":1,"column_end":4}},{"value":"/ let mut ctx = Context::new(); // builtins","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":29011,"byte_end":29056,"line_start":676,"line_end":676,"column_start":1,"column_end":46}},{"value":"/ ctx.var(\"x\", 3.)","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":29057,"byte_end":29077,"line_start":677,"line_end":677,"column_start":1,"column_end":21}},{"value":"/    .func(\"f\", |x| 2. * x)","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":29078,"byte_end":29107,"line_start":678,"line_end":678,"column_start":1,"column_end":30}},{"value":"/    .funcn(\"sum\", |xs| xs.iter().sum(), ..);","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":29108,"byte_end":29155,"line_start":679,"line_end":679,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":29156,"byte_end":29159,"line_start":680,"line_end":680,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(eval_str_with_context(\"pi + sum(1., 2.) + f(x)\", &ctx),","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":29160,"byte_end":29230,"line_start":681,"line_end":681,"column_start":1,"column_end":71}},{"value":"/            Ok(std::f64::consts::PI + 1. + 2. + 2. * 3.));","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":29231,"byte_end":29292,"line_start":682,"line_end":682,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":29293,"byte_end":29300,"line_start":683,"line_end":683,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":29536,"byte_end":29539,"line_start":692,"line_end":692,"column_start":12,"column_end":15},"name":"new","qualname":"<Context>::new","value":"pub fn new() -> Context","parent":null,"children":[],"decl_id":null,"docs":" Creates a context with built-in constants and functions.\n","sig":null,"attributes":[{"value":"/ Creates a context with built-in constants and functions.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":29464,"byte_end":29524,"line_start":691,"line_end":691,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":30833,"byte_end":30838,"line_start":728,"line_end":728,"column_start":12,"column_end":17},"name":"empty","qualname":"<Context>::empty","value":"pub fn empty() -> Context","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty contexts.\n","sig":null,"attributes":[{"value":"/ Creates an empty contexts.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":30791,"byte_end":30821,"line_start":727,"line_end":727,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":31033,"byte_end":31036,"line_start":736,"line_end":736,"column_start":12,"column_end":15},"name":"var","qualname":"<Context>::var","value":"pub fn var<S: Into<String>>(&mut Self, S, f64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a new variable/constant.\n","sig":null,"attributes":[{"value":"/ Adds a new variable/constant.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":30988,"byte_end":31021,"line_start":735,"line_end":735,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":31221,"byte_end":31225,"line_start":742,"line_end":742,"column_start":12,"column_end":16},"name":"func","qualname":"<Context>::func","value":"pub fn func<S, F>(&mut Self, S, F) -> &mut Self where S: Into<String>,\nF: Fn(f64) -> f64 + 'a","parent":null,"children":[],"decl_id":null,"docs":" Adds a new function of one argument.\n","sig":null,"attributes":[{"value":"/ Adds a new function of one argument.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":31169,"byte_end":31209,"line_start":741,"line_end":741,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":31717,"byte_end":31722,"line_start":761,"line_end":761,"column_start":12,"column_end":17},"name":"func2","qualname":"<Context>::func2","value":"pub fn func2<S, F>(&mut Self, S, F) -> &mut Self where S: Into<String>,\nF: Fn(f64, f64) -> f64 + 'a","parent":null,"children":[],"decl_id":null,"docs":" Adds a new function of two arguments.\n","sig":null,"attributes":[{"value":"/ Adds a new function of two arguments.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":31664,"byte_end":31705,"line_start":760,"line_end":760,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":32230,"byte_end":32235,"line_start":780,"line_end":780,"column_start":12,"column_end":17},"name":"func3","qualname":"<Context>::func3","value":"pub fn func3<S, F>(&mut Self, S, F) -> &mut Self where S: Into<String>,\nF: Fn(f64, f64, f64) -> f64 + 'a","parent":null,"children":[],"decl_id":null,"docs":" Adds a new function of three arguments.\n","sig":null,"attributes":[{"value":"/ Adds a new function of three arguments.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":32175,"byte_end":32218,"line_start":779,"line_end":779,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":33330,"byte_end":33335,"line_start":815,"line_end":815,"column_start":12,"column_end":17},"name":"funcn","qualname":"<Context>::funcn","value":"pub fn funcn<S, F, N>(&mut Self, S, F, N) -> &mut Self where S: Into<String>,\nF: Fn(&[f64]) -> f64 + 'a, N: ArgGuard","parent":null,"children":[],"decl_id":null,"docs":" Adds a new function of a variable number of arguments.","sig":null,"attributes":[{"value":"/ Adds a new function of a variable number of arguments.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":32702,"byte_end":32760,"line_start":798,"line_end":798,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":32765,"byte_end":32768,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ `n_args` specifies the allowed number of variables by giving an exact number `n` or a range","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":32773,"byte_end":32868,"line_start":800,"line_end":800,"column_start":5,"column_end":100}},{"value":"/ `n..m`, `..`, `n..`, `..m`. The range is half-open, exclusive on the right, as is common in","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":32873,"byte_end":32968,"line_start":801,"line_end":801,"column_start":5,"column_end":100}},{"value":"/ Rust standard library.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":32973,"byte_end":32999,"line_start":802,"line_end":802,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":33004,"byte_end":33007,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":33012,"byte_end":33025,"line_start":804,"line_end":804,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":33030,"byte_end":33033,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":33038,"byte_end":33049,"line_start":806,"line_end":806,"column_start":5,"column_end":16}},{"value":"/ let mut ctx = meval::Context::empty();","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":33054,"byte_end":33096,"line_start":807,"line_end":807,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":33101,"byte_end":33104,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ // require exactly 2 arguments","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":33109,"byte_end":33143,"line_start":809,"line_end":809,"column_start":5,"column_end":39}},{"value":"/ ctx.funcn(\"sum_two\", |xs| xs[0] + xs[1], 2);","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":33148,"byte_end":33196,"line_start":810,"line_end":810,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":33201,"byte_end":33204,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ // allow an arbitrary number of arguments","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":33209,"byte_end":33254,"line_start":812,"line_end":812,"column_start":5,"column_end":50}},{"value":"/ ctx.funcn(\"sum\", |xs| xs.iter().sum(), ..);","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":33259,"byte_end":33306,"line_start":813,"line_end":813,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":33311,"byte_end":33318,"line_start":814,"line_end":814,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":185},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":34160,"byte_end":34168,"line_start":848,"line_end":848,"column_start":11,"column_end":19},"name":"ArgGuard","qualname":"::expr::ArgGuard","value":"ArgGuard","parent":null,"children":[{"krate":0,"index":186}],"decl_id":null,"docs":" Trait for types that can specify the number of required arguments for a function with a\n variable number of arguments.","sig":null,"attributes":[{"value":"/ Trait for types that can specify the number of required arguments for a function with a","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":33753,"byte_end":33844,"line_start":834,"line_end":834,"column_start":1,"column_end":92}},{"value":"/ variable number of arguments.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":33845,"byte_end":33878,"line_start":835,"line_end":835,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":33879,"byte_end":33882,"line_start":836,"line_end":836,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":33883,"byte_end":33896,"line_start":837,"line_end":837,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":33897,"byte_end":33900,"line_start":838,"line_end":838,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":33901,"byte_end":33912,"line_start":839,"line_end":839,"column_start":1,"column_end":12}},{"value":"/ let mut ctx = meval::Context::empty();","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":33913,"byte_end":33955,"line_start":840,"line_end":840,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":33956,"byte_end":33959,"line_start":841,"line_end":841,"column_start":1,"column_end":4}},{"value":"/ // require exactly 2 arguments","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":33960,"byte_end":33994,"line_start":842,"line_end":842,"column_start":1,"column_end":35}},{"value":"/ ctx.funcn(\"sum_two\", |xs| xs[0] + xs[1], 2);","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":33995,"byte_end":34043,"line_start":843,"line_end":843,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":34044,"byte_end":34047,"line_start":844,"line_end":844,"column_start":1,"column_end":4}},{"value":"/ // allow an arbitrary number of arguments","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":34048,"byte_end":34093,"line_start":845,"line_end":845,"column_start":1,"column_end":46}},{"value":"/ ctx.funcn(\"sum\", |xs| xs.iter().sum(), ..);","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":34094,"byte_end":34141,"line_start":846,"line_end":846,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":34142,"byte_end":34149,"line_start":847,"line_end":847,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":34178,"byte_end":34190,"line_start":849,"line_end":849,"column_start":8,"column_end":20},"name":"to_arg_guard","qualname":"::expr::ArgGuard::to_arg_guard","value":"pub fn to_arg_guard<'a, F: Fn(&[f64]) -> f64 + 'a>(Self, F) -> GuardedFunc","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":219},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/shunting_yard.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"shunting_yard","qualname":"::shunting_yard","value":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/shunting_yard.rs","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":223},{"krate":0,"index":226},{"krate":0,"index":401},{"krate":0,"index":408},{"krate":0,"index":410},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":428},{"krate":0,"index":430},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":229},{"krate":0,"index":231},{"krate":0,"index":233},{"krate":0,"index":237}],"decl_id":null,"docs":" Implementation of the shunting-yard algorithm for converting an infix expression to an\n expression in reverse Polish notation (RPN).","sig":null,"attributes":[{"value":"/ Implementation of the shunting-yard algorithm for converting an infix expression to an","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/shunting_yard.rs","byte_start":44019,"byte_end":44109,"line_start":1,"line_end":1,"column_start":1,"column_end":91}},{"value":"/ expression in reverse Polish notation (RPN).","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/shunting_yard.rs","byte_start":44110,"byte_end":44158,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/shunting_yard.rs","byte_start":44159,"byte_end":44162,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ See the Wikipedia articles on the [shunting-yard algorithm][shunting] and on [reverse Polish","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/shunting_yard.rs","byte_start":44163,"byte_end":44259,"line_start":4,"line_end":4,"column_start":1,"column_end":97}},{"value":"/ notation][RPN] for more details.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/shunting_yard.rs","byte_start":44260,"byte_end":44296,"line_start":5,"line_end":5,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/shunting_yard.rs","byte_start":44297,"byte_end":44300,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [RPN]: https://en.wikipedia.org/wiki/Reverse_Polish_notation","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/shunting_yard.rs","byte_start":44301,"byte_end":44365,"line_start":7,"line_end":7,"column_start":1,"column_end":65}},{"value":"/ [shunting]: https://en.wikipedia.org/wiki/Shunting-yard_algorithm","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/shunting_yard.rs","byte_start":44366,"byte_end":44435,"line_start":8,"line_end":8,"column_start":1,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":414},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/shunting_yard.rs","byte_start":44734,"byte_end":44750,"line_start":24,"line_end":24,"column_start":5,"column_end":21},"name":"MismatchedLParen","qualname":"::shunting_yard::RPNError::MismatchedLParen","value":"RPNError::MismatchedLParen(usize)","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":" An extra left parenthesis was found.\n","sig":null,"attributes":[{"value":"/ An extra left parenthesis was found.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/shunting_yard.rs","byte_start":44689,"byte_end":44729,"line_start":23,"line_end":23,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":417},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/shunting_yard.rs","byte_start":44809,"byte_end":44825,"line_start":26,"line_end":26,"column_start":5,"column_end":21},"name":"MismatchedRParen","qualname":"::shunting_yard::RPNError::MismatchedRParen","value":"RPNError::MismatchedRParen(usize)","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":" An extra right parenthesis was found.\n","sig":null,"attributes":[{"value":"/ An extra right parenthesis was found.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/shunting_yard.rs","byte_start":44763,"byte_end":44804,"line_start":25,"line_end":25,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":420},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/shunting_yard.rs","byte_start":44895,"byte_end":44910,"line_start":28,"line_end":28,"column_start":5,"column_end":20},"name":"UnexpectedComma","qualname":"::shunting_yard::RPNError::UnexpectedComma","value":"RPNError::UnexpectedComma(usize)","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":" Comma that is not separating function arguments.\n","sig":null,"attributes":[{"value":"/ Comma that is not separating function arguments.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/shunting_yard.rs","byte_start":44838,"byte_end":44890,"line_start":27,"line_end":27,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":423},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/shunting_yard.rs","byte_start":44967,"byte_end":44984,"line_start":30,"line_end":30,"column_start":5,"column_end":22},"name":"NotEnoughOperands","qualname":"::shunting_yard::RPNError::NotEnoughOperands","value":"RPNError::NotEnoughOperands(usize)","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":" Too few operands for some operator.\n","sig":null,"attributes":[{"value":"/ Too few operands for some operator.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/shunting_yard.rs","byte_start":44923,"byte_end":44962,"line_start":29,"line_end":29,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":426},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/shunting_yard.rs","byte_start":45033,"byte_end":45048,"line_start":32,"line_end":32,"column_start":5,"column_end":20},"name":"TooManyOperands","qualname":"::shunting_yard::RPNError::TooManyOperands","value":"RPNError::TooManyOperands","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":" Too many operands reported.\n","sig":null,"attributes":[{"value":"/ Too many operands reported.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/shunting_yard.rs","byte_start":44997,"byte_end":45028,"line_start":31,"line_end":31,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":413},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/shunting_yard.rs","byte_start":44674,"byte_end":44682,"line_start":22,"line_end":22,"column_start":10,"column_end":18},"name":"RPNError","qualname":"::shunting_yard::RPNError","value":"pub enum RPNError {\n    MismatchedLParen(usize),\n    MismatchedRParen(usize),\n    UnexpectedComma(usize),\n    NotEnoughOperands(usize),\n    TooManyOperands,\n}","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":417},{"krate":0,"index":420},{"krate":0,"index":423},{"krate":0,"index":426}],"decl_id":null,"docs":" An error produced by the shunting-yard algorightm.\n","sig":null,"attributes":[{"value":"/ An error produced by the shunting-yard algorightm.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/shunting_yard.rs","byte_start":44565,"byte_end":44619,"line_start":20,"line_end":20,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":237},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/shunting_yard.rs","byte_start":47022,"byte_end":47028,"line_start":89,"line_end":89,"column_start":8,"column_end":14},"name":"to_rpn","qualname":"::shunting_yard::to_rpn","value":"pub fn to_rpn(&[Token]) -> Result<Vec<Token>, RPNError>","parent":null,"children":[],"decl_id":null,"docs":" Converts a tokenized infix expression to reverse Polish notation.","sig":null,"attributes":[{"value":"/ Converts a tokenized infix expression to reverse Polish notation.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/shunting_yard.rs","byte_start":46861,"byte_end":46930,"line_start":84,"line_end":84,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/shunting_yard.rs","byte_start":46931,"byte_end":46934,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ # Failure","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/shunting_yard.rs","byte_start":46935,"byte_end":46948,"line_start":86,"line_end":86,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/shunting_yard.rs","byte_start":46949,"byte_end":46952,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Returns `Err` if the input expression is not well-formed.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/shunting_yard.rs","byte_start":46953,"byte_end":47014,"line_start":88,"line_end":88,"column_start":1,"column_end":62}}]},{"kind":"Mod","id":{"krate":0,"index":239},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tokenizer","qualname":"::tokenizer","value":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":244},{"krate":0,"index":247},{"krate":0,"index":250},{"krate":0,"index":253},{"krate":0,"index":256},{"krate":0,"index":259},{"krate":0,"index":440},{"krate":0,"index":449},{"krate":0,"index":451},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":457},{"krate":0,"index":470},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":475},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":501},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":507},{"krate":0,"index":509},{"krate":0,"index":529},{"krate":0,"index":537},{"krate":0,"index":542},{"krate":0,"index":547},{"krate":0,"index":266},{"krate":0,"index":552},{"krate":0,"index":555},{"krate":0,"index":277},{"krate":0,"index":560},{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":577},{"krate":0,"index":579},{"krate":0,"index":581},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":600},{"krate":0,"index":602},{"krate":0,"index":604},{"krate":0,"index":303}],"decl_id":null,"docs":" Tokenizer that converts a mathematical expression in a string form into a series of `Token`s.","sig":null,"attributes":[{"value":"/ Tokenizer that converts a mathematical expression in a string form into a series of `Token`s.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":54170,"byte_end":54267,"line_start":1,"line_end":1,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":54268,"byte_end":54271,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The underlying parser is build using the [nom] parser combinator crate.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":54272,"byte_end":54347,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":54348,"byte_end":54351,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The parser should tokenize only well-formed expressions.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":54352,"byte_end":54412,"line_start":5,"line_end":5,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":54413,"byte_end":54416,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [nom]: https://crates.io/crates/nom","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":54417,"byte_end":54456,"line_start":7,"line_end":7,"column_start":1,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":441},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":54801,"byte_end":54816,"line_start":18,"line_end":18,"column_start":5,"column_end":20},"name":"UnexpectedToken","qualname":"::tokenizer::ParseError::UnexpectedToken","value":"ParseError::UnexpectedToken(usize)","parent":{"krate":0,"index":440},"children":[],"decl_id":null,"docs":" A token that is not allowed at the given location (contains the location of the offending\n character in the source string).\n","sig":null,"attributes":[{"value":"/ A token that is not allowed at the given location (contains the location of the offending","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":54662,"byte_end":54755,"line_start":16,"line_end":16,"column_start":5,"column_end":98}},{"value":"/ character in the source string).","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":54760,"byte_end":54796,"line_start":17,"line_end":17,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":444},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":54944,"byte_end":54957,"line_start":21,"line_end":21,"column_start":5,"column_end":18},"name":"MissingRParen","qualname":"::tokenizer::ParseError::MissingRParen","value":"ParseError::MissingRParen(i32)","parent":{"krate":0,"index":440},"children":[],"decl_id":null,"docs":" Missing right parentheses at the end of the source string (contains the number of missing\n parens).\n","sig":null,"attributes":[{"value":"/ Missing right parentheses at the end of the source string (contains the number of missing","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":54829,"byte_end":54922,"line_start":19,"line_end":19,"column_start":5,"column_end":98}},{"value":"/ parens).","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":54927,"byte_end":54939,"line_start":20,"line_end":20,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":447},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":55044,"byte_end":55059,"line_start":23,"line_end":23,"column_start":5,"column_end":20},"name":"MissingArgument","qualname":"::tokenizer::ParseError::MissingArgument","value":"ParseError::MissingArgument","parent":{"krate":0,"index":440},"children":[],"decl_id":null,"docs":" Missing operator or function argument at the end of the expression.\n","sig":null,"attributes":[{"value":"/ Missing operator or function argument at the end of the expression.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":54968,"byte_end":55039,"line_start":22,"line_end":22,"column_start":5,"column_end":76}}]},{"kind":"Enum","id":{"krate":0,"index":440},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":54645,"byte_end":54655,"line_start":15,"line_end":15,"column_start":10,"column_end":20},"name":"ParseError","qualname":"::tokenizer::ParseError","value":"pub enum ParseError {\n    UnexpectedToken(usize),\n    MissingRParen(i32),\n    MissingArgument,\n}","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":444},{"krate":0,"index":447}],"decl_id":null,"docs":" An error reported by the parser.\n","sig":null,"attributes":[{"value":"/ An error reported by the parser.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":54564,"byte_end":54600,"line_start":13,"line_end":13,"column_start":1,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":458},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":56008,"byte_end":56012,"line_start":54,"line_end":54,"column_start":5,"column_end":9},"name":"Plus","qualname":"::tokenizer::Operation::Plus","value":"Operation::Plus","parent":{"krate":0,"index":457},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":460},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":56018,"byte_end":56023,"line_start":55,"line_end":55,"column_start":5,"column_end":10},"name":"Minus","qualname":"::tokenizer::Operation::Minus","value":"Operation::Minus","parent":{"krate":0,"index":457},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":462},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":56029,"byte_end":56034,"line_start":56,"line_end":56,"column_start":5,"column_end":10},"name":"Times","qualname":"::tokenizer::Operation::Times","value":"Operation::Times","parent":{"krate":0,"index":457},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":464},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":56040,"byte_end":56043,"line_start":57,"line_end":57,"column_start":5,"column_end":8},"name":"Div","qualname":"::tokenizer::Operation::Div","value":"Operation::Div","parent":{"krate":0,"index":457},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":466},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":56049,"byte_end":56052,"line_start":58,"line_end":58,"column_start":5,"column_end":8},"name":"Rem","qualname":"::tokenizer::Operation::Rem","value":"Operation::Rem","parent":{"krate":0,"index":457},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":468},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":56058,"byte_end":56061,"line_start":59,"line_end":59,"column_start":5,"column_end":8},"name":"Pow","qualname":"::tokenizer::Operation::Pow","value":"Operation::Pow","parent":{"krate":0,"index":457},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":457},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":55992,"byte_end":56001,"line_start":53,"line_end":53,"column_start":10,"column_end":19},"name":"Operation","qualname":"::tokenizer::Operation","value":"pub enum Operation { Plus, Minus, Times, Div, Rem, Pow, }","parent":null,"children":[{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":464},{"krate":0,"index":466},{"krate":0,"index":468}],"decl_id":null,"docs":" Mathematical operations.\n","sig":null,"attributes":[{"value":"/ Mathematical operations.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":55913,"byte_end":55941,"line_start":51,"line_end":51,"column_start":1,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":479},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":56171,"byte_end":56177,"line_start":66,"line_end":66,"column_start":5,"column_end":11},"name":"Binary","qualname":"::tokenizer::Token::Binary","value":"Token::Binary(Operation)","parent":{"krate":0,"index":478},"children":[],"decl_id":null,"docs":" Binary operation.\n","sig":null,"attributes":[{"value":"/ Binary operation.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":56145,"byte_end":56166,"line_start":65,"line_end":65,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":482},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":56219,"byte_end":56224,"line_start":68,"line_end":68,"column_start":5,"column_end":10},"name":"Unary","qualname":"::tokenizer::Token::Unary","value":"Token::Unary(Operation)","parent":{"krate":0,"index":478},"children":[],"decl_id":null,"docs":" Unary operation.\n","sig":null,"attributes":[{"value":"/ Unary operation.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":56194,"byte_end":56214,"line_start":67,"line_end":67,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":485},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":56268,"byte_end":56274,"line_start":71,"line_end":71,"column_start":5,"column_end":11},"name":"LParen","qualname":"::tokenizer::Token::LParen","value":"Token::LParen","parent":{"krate":0,"index":478},"children":[],"decl_id":null,"docs":" Left parenthesis.\n","sig":null,"attributes":[{"value":"/ Left parenthesis.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":56242,"byte_end":56263,"line_start":70,"line_end":70,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":487},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":56307,"byte_end":56313,"line_start":73,"line_end":73,"column_start":5,"column_end":11},"name":"RParen","qualname":"::tokenizer::Token::RParen","value":"Token::RParen","parent":{"krate":0,"index":478},"children":[],"decl_id":null,"docs":" Right parenthesis.\n","sig":null,"attributes":[{"value":"/ Right parenthesis.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":56280,"byte_end":56302,"line_start":72,"line_end":72,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":489},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":56362,"byte_end":56367,"line_start":75,"line_end":75,"column_start":5,"column_end":10},"name":"Comma","qualname":"::tokenizer::Token::Comma","value":"Token::Comma","parent":{"krate":0,"index":478},"children":[],"decl_id":null,"docs":" Comma: function argument separator\n","sig":null,"attributes":[{"value":"/ Comma: function argument separator","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":56319,"byte_end":56357,"line_start":74,"line_end":74,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":491},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":56392,"byte_end":56398,"line_start":78,"line_end":78,"column_start":5,"column_end":11},"name":"Number","qualname":"::tokenizer::Token::Number","value":"Token::Number(f64)","parent":{"krate":0,"index":478},"children":[],"decl_id":null,"docs":" A number.\n","sig":null,"attributes":[{"value":"/ A number.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":56374,"byte_end":56387,"line_start":77,"line_end":77,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":494},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":56429,"byte_end":56432,"line_start":80,"line_end":80,"column_start":5,"column_end":8},"name":"Var","qualname":"::tokenizer::Token::Var","value":"Token::Var(String)","parent":{"krate":0,"index":478},"children":[],"decl_id":null,"docs":" A variable.\n","sig":null,"attributes":[{"value":"/ A variable.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":56409,"byte_end":56424,"line_start":79,"line_end":79,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":497},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":56500,"byte_end":56504,"line_start":82,"line_end":82,"column_start":5,"column_end":9},"name":"Func","qualname":"::tokenizer::Token::Func","value":"Token::Func(String, Option<usize>)","parent":{"krate":0,"index":478},"children":[],"decl_id":null,"docs":" A function with name and number of arguments.\n","sig":null,"attributes":[{"value":"/ A function with name and number of arguments.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":56446,"byte_end":56495,"line_start":81,"line_end":81,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":478},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":56133,"byte_end":56138,"line_start":64,"line_end":64,"column_start":10,"column_end":15},"name":"Token","qualname":"::tokenizer::Token","value":"pub enum Token {\n    Binary(Operation),\n    Unary(Operation),\n    LParen,\n    RParen,\n    Comma,\n    Number(f64),\n    Var(String),\n    Func(String, Option<usize>),\n}","parent":null,"children":[{"krate":0,"index":479},{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":487},{"krate":0,"index":489},{"krate":0,"index":491},{"krate":0,"index":494},{"krate":0,"index":497}],"decl_id":null,"docs":" Expression tokens.\n","sig":null,"attributes":[{"value":"/ Expression tokens.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":56066,"byte_end":56088,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":303},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":61847,"byte_end":61855,"line_start":271,"line_end":271,"column_start":8,"column_end":16},"name":"tokenize","qualname":"::tokenizer::tokenize","value":"pub fn tokenize<S: AsRef<str>>(S) -> Result<Vec<Token>, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Tokenize a given mathematical expression.","sig":null,"attributes":[{"value":"/ Tokenize a given mathematical expression.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":61639,"byte_end":61684,"line_start":264,"line_end":264,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":61685,"byte_end":61688,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ The parser should return `Ok` only if the expression is well-formed.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":61689,"byte_end":61761,"line_start":266,"line_end":266,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":61762,"byte_end":61765,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ # Failure","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":61766,"byte_end":61779,"line_start":268,"line_end":268,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":61780,"byte_end":61783,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ Returns `Err` if the expression is not well-formed.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":61784,"byte_end":61839,"line_start":270,"line_end":270,"column_start":1,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":606},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":6290,"byte_end":6305,"line_start":215,"line_end":215,"column_start":5,"column_end":20},"name":"UnknownVariable","qualname":"::Error::UnknownVariable","value":"Error::UnknownVariable(String)","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":609},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":6319,"byte_end":6327,"line_start":216,"line_end":216,"column_start":5,"column_end":13},"name":"Function","qualname":"::Error::Function","value":"Error::Function(String, FuncEvalError)","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":613},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":6397,"byte_end":6407,"line_start":218,"line_end":218,"column_start":5,"column_end":15},"name":"ParseError","qualname":"::Error::ParseError","value":"Error::ParseError(ParseError)","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":" An error returned by the parser.\n","sig":null,"attributes":[{"value":"/ An error returned by the parser.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":6356,"byte_end":6392,"line_start":217,"line_end":217,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":616},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":6480,"byte_end":6488,"line_start":220,"line_end":220,"column_start":5,"column_end":13},"name":"RPNError","qualname":"::Error::RPNError","value":"Error::RPNError(RPNError)","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":" The shunting-yard algorithm returned an error.\n","sig":null,"attributes":[{"value":"/ The shunting-yard algorithm returned an error.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":6425,"byte_end":6475,"line_start":219,"line_end":219,"column_start":5,"column_end":55}}]},{"kind":"Enum","id":{"krate":0,"index":605},"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":6278,"byte_end":6283,"line_start":214,"line_end":214,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"pub enum Error {\n    UnknownVariable(String),\n    Function(String, FuncEvalError),\n    ParseError(ParseError),\n    RPNError(RPNError),\n}","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":609},{"krate":0,"index":613},{"krate":0,"index":616}],"decl_id":null,"docs":" An error produced during parsing or evaluation.\n","sig":null,"attributes":[{"value":"/ An error produced during parsing or evaluation.","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":6182,"byte_end":6233,"line_start":212,"line_end":212,"column_start":1,"column_end":52}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":8903,"byte_end":8907,"line_start":35,"line_end":35,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":60},{"krate":0,"index":63},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":22011,"byte_end":22015,"line_start":429,"line_end":429,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":22583,"byte_end":22587,"line_start":453,"line_end":453,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":24962,"byte_end":24975,"line_start":535,"line_end":535,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":25423,"byte_end":25436,"line_start":546,"line_end":546,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":27574,"byte_end":27581,"line_start":617,"line_end":617,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":27849,"byte_end":27857,"line_start":627,"line_end":627,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":28055,"byte_end":28058,"line_start":636,"line_end":636,"column_start":41,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":29446,"byte_end":29453,"line_start":690,"line_end":690,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":168},{"krate":0,"index":172},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":33605,"byte_end":33612,"line_start":826,"line_end":826,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":34611,"byte_end":34620,"line_start":864,"line_end":864,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":34963,"byte_end":34970,"line_start":876,"line_end":876,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":35311,"byte_end":35316,"line_start":888,"line_end":888,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":35785,"byte_end":35794,"line_start":902,"line_end":902,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":35974,"byte_end":35981,"line_start":908,"line_end":908,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/shunting_yard.rs","byte_start":45075,"byte_end":45083,"line_start":35,"line_end":35,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/shunting_yard.rs","byte_start":45799,"byte_end":45807,"line_start":53,"line_end":53,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":55086,"byte_end":55096,"line_start":26,"line_end":26,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":55621,"byte_end":55631,"line_start":41,"line_end":41,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":6525,"byte_end":6530,"line_start":223,"line_end":223,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":7195,"byte_end":7200,"line_start":244,"line_end":244,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":7307,"byte_end":7312,"line_start":250,"line_end":250,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":7418,"byte_end":7423,"line_start":256,"line_end":256,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":6026,"byte_end":6039,"line_start":202,"line_end":202,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":219}},{"kind":"Mod","span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":6049,"byte_end":6058,"line_start":203,"line_end":203,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":239}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":8903,"byte_end":8907,"line_start":35,"line_end":35,"column_start":6,"column_end":10},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":22011,"byte_end":22015,"line_start":429,"line_end":429,"column_start":18,"column_end":22},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":326},"to":{"krate":2,"index":12188}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":22583,"byte_end":22587,"line_start":453,"line_end":453,"column_start":16,"column_end":20},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":326},"to":{"krate":2,"index":3242}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":24962,"byte_end":24975,"line_start":535,"line_end":535,"column_start":23,"column_end":36},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":336},"to":{"krate":2,"index":9602}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":25423,"byte_end":25436,"line_start":546,"line_end":546,"column_start":28,"column_end":41},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":336},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":27574,"byte_end":27581,"line_start":617,"line_end":617,"column_start":47,"column_end":54},"kind":{"Impl":{"id":5}},"from":{"krate":1,"index":1200},"to":{"krate":0,"index":115}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":27849,"byte_end":27857,"line_start":627,"line_end":627,"column_start":47,"column_end":55},"kind":{"Impl":{"id":6}},"from":{"krate":5,"index":1392},"to":{"krate":0,"index":115}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":28055,"byte_end":28058,"line_start":636,"line_end":636,"column_start":41,"column_end":44},"kind":{"Impl":{"id":7}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":115}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":29446,"byte_end":29453,"line_start":690,"line_end":690,"column_start":10,"column_end":17},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":33605,"byte_end":33612,"line_start":826,"line_end":826,"column_start":22,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":390},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":34611,"byte_end":34620,"line_start":864,"line_end":864,"column_start":29,"column_end":38},"kind":{"Impl":{"id":11}},"from":{"krate":2,"index":44500},"to":{"krate":0,"index":185}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":34963,"byte_end":34970,"line_start":876,"line_end":876,"column_start":29,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":2,"index":44521},"to":{"krate":0,"index":185}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":35311,"byte_end":35316,"line_start":888,"line_end":888,"column_start":29,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":2,"index":44475},"to":{"krate":0,"index":185}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":35785,"byte_end":35794,"line_start":902,"line_end":902,"column_start":29,"column_end":38},"kind":{"Impl":{"id":14}},"from":{"krate":2,"index":44459},"to":{"krate":0,"index":185}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/expr.rs","byte_start":35974,"byte_end":35981,"line_start":908,"line_end":908,"column_start":30,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":390},"to":{"krate":0,"index":115}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/shunting_yard.rs","byte_start":45075,"byte_end":45083,"line_start":35,"line_end":35,"column_start":23,"column_end":31},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":413},"to":{"krate":2,"index":9602}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/shunting_yard.rs","byte_start":45799,"byte_end":45807,"line_start":53,"line_end":53,"column_start":28,"column_end":36},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":413},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":55086,"byte_end":55096,"line_start":26,"line_end":26,"column_start":23,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":440},"to":{"krate":2,"index":9602}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/tokenizer.rs","byte_start":55621,"byte_end":55631,"line_start":41,"line_end":41,"column_start":28,"column_end":38},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":440},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":6525,"byte_end":6530,"line_start":223,"line_end":223,"column_start":23,"column_end":28},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":605},"to":{"krate":2,"index":9602}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":7195,"byte_end":7200,"line_start":244,"line_end":244,"column_start":27,"column_end":32},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":605},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":7307,"byte_end":7312,"line_start":250,"line_end":250,"column_start":25,"column_end":30},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":605},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/laura-eliise/.cargo/registry/src/github.com-1ecc6299db9ec823/meval-0.2.0/src/lib.rs","byte_start":7418,"byte_end":7423,"line_start":256,"line_end":256,"column_start":28,"column_end":33},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":605},"to":{"krate":1,"index":2452}}]}